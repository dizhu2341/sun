#include "FundinfoSync.h"
#include "AssetSync.h"
#include "CombiSync.h"
#include "EntrustStockholderSync.h"
#include "StockholderSync.h"
#include "StockSync.h"
#include "BondpropertySync.h"
#include "OptionSync.h"
#include "FundRightSync.h"
#include "FuturesInfoSync.h"
#include "IssuerSync.h"
#include "TraderivalSync.h"
#include "FeehsSync.h"
#include "FeeqhSync.h"
#include "FeedetailhsSync.h"
#include "FeedetailqhSync.h"
#include "CapitalaccountSync.h"
#include "BondrateSync.h"
#include "AccountgroupSync.h"
#include "AccountgrouptypeSync.h"
#include "GroupfundcombiSync.h"
#include "TradeseatSync.h"
#include "AssetdaySync.h"
#include "UnitstockSync.h"
#include "RzrqcashSync.h"
#include "FtrenabledetailSync.h"
#include "HoldingdetailSync.h"
#include "TradedateSync.h"
#include "FuturecashSync.h"
#include "OptioncashSync.h"
#include "InstancestockSync.h"
#include "BusinessdealconfigSync.h"
#include "HgmortagageSync.h"
#include "OutconfirmSync.h"
#include "OutpendsettleSync.h"
#include "BankhgregisterSync.h"
#include "FundassetSync.h"
#include "AssetassetSync.h"
#include "HktzxxinfoSync.h"
#include "HgregisterSync.h"
#include "ManualcashSync.h"
#include "ManualstockSync.h"
#include "CashbusinessSync.h"
#include "StockbusinessSync.h"
#include "UnfinishedbusinSync.h"
#include "PendsettleSync.h"
#include "TradefundSync.h"
#include "FuturedepositratioSync.h"
#include "Futurekindarbitragecombi.h"
#include "SeatSync.h"
#include "SysteminfoSync.h"
#include "SecuritiesbranchSync.h"
#include "BonddetailpropertySync.h"
#include "EtfstocklistinfoSync.h"
#include "HgratioSync.h"
#include "BrokerSync.h"
#include "EtfbasicinfoSync.h"
#include "RzrqstockSync.h"
#include "ZdjjhqSync.h"
#include "TradefeeconfighsSync.h"
#include "DeptSync.h"
#include "RzrqstocksetSync.h"
#include "SecuritiesbranchexSync.h"
#include "CorpactioninfoSync.h"
#include "RzrqconfigSync.h"
#include "CurrencyrateSync.h"
#include "InterestrateSync.h"
#include "SelfbankaccountSync.h"
#include "BankaccountSync.h"
#include "LoffundparamSync.h"
#include "SjsqqzhclSync.h"
#include "BankinfoSync.h"
#include "FuturekindSync.h"
#include "PriceintervalSync.h"
#include "BranchcaptacctinfoSync.h"
#include "OpacctgrouptyperightSync.h"
#include "ContainfeeSync.h"
#include "FeesetpropertySync.h"
#include "ContainfeesetSync.h"
#include "FeesethsSync.h"
#include "FeedetailsethsSync.h"
#include "EntrustapprovesetSync.h"
#include "OperatorstatusSync.h"
#include "TainfoSync.h"
#include "TadealconfigSync.h"
#include "OptiondepositsetSync.h"
#include "CompanySync.h"
#include "CustomclassSync.h"
#include "CustomdictionarySync.h"
#include "SquenceSync.h"
#include "OperatorSync.h"
#include "SysparamvalueSync.h"
#include "MarketinfoSync.h"
#include "FuturearbitrageinfoSync.h"
#include "SzfundestimateSync.h"
#include "FinancedebitSync.h"
#include "OptioncombiSync.h"
#include "SubjectdataSync.h"
#include "InvestfundinfoSync.h"
#include "FutureguaranteedsecuritySync.h"
#include "BusinessspecialSync.h"    
#include "DearMoneySecuritySync.h"
#include "StockissueinfoSync.h"

#include "Stockbusiness_xh.h"
#include "Stockbusiness_qh.h"
#include "Stockbusiness_cw.h"
#include "Stockbusiness_yhj.h"
#include "Stockfrozendetail_xh.h"
#include "Stockfrozendetail_qh.h"
#include "Stockfrozendetail_cw.h"
#include "Stockfrozendetail_yhj.h"
#include "Unitstock_xh.h"
#include "Unitstock_xh_sync.h"
#include "Unitstock_qh.h"
#include "Unitstock_qh_sync.h"
#include "Unitstock_cw.h"
#include "Unitstock_cw_sync.h"
#include "Unitstock_yhj.h"
#include "Financedebit_redo.h"
#include "Fundasset_redo.h"
#include "Bankuncomplete.h"
#include "Subjectbusiness.h"
#include "Mortgageinfo.h"
#include "Mortgageinfo_redo.h"
#include "Subjectstock.h"
#include "Subjectstock_redo.h"
#include "Otcdealsettuncomp.h"
#include "Otcdealsettuncomp_redo.h"
#include "Instancestock_yhj.h"
#include "Instancestock_xh.h"
#include "Instancestock_qh.h"
#include "Instancestock_xh_redo.h"
#include "Instancestock_qh_redo.h"

#include "OrganizationSync.h"
#include "HisRealDealSync.h"


//以下是正式初始化
#include "AssetdayZscshSync.h"
#include "FuturecashZscshSync.h"
#include "OptioncashZscshSync.h"
#include "RzrqcashZscshSync.h"
#include "UnitstockZscshSync.h"
#include "InstancestockZscshSync.h"
#include "HgregisterZscshSync.h"
#include "ManualcashZscshSync.h"
#include "ManualstockZscshSync.h"
#include "CashbusinessZscshSync.h"
#include "StockbusinessZscshSync.h"
#include "UnfinishedbusinZscshSync.h"
#include "PendsettleZscshSync.h"
#include "FtrenabledetailZscshSync.h"
#include "HoldingdetailZscshSync.h"
#include "TradefundZscshSync.h"
#include "StockInfoModifySync.h"
#include "SubjectdataZscshSync.h"
#include "OutconfirmZscshSync.h"
#include "Otcdealsettuncomp.h"

sql_context defaultCtx = NULL;
EXEC SQL CONTEXT USE :defaultCtx;

//AS_数据同步_账户信息

int FUNCTION_CALL_MODE F2615001(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker)
{
    LOGSYSTEM("【jc_tfundinfo】表同步，开始同步账户信息表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CFundinfoSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615001()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【jc_tfundinfo】表同步，同步账户信息表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "账户信息同步完成", "");
}

//AS_数据同步_资产单元

int FUNCTION_CALL_MODE F2615002(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【jc_tasset】表同步，开始同步资产单元表...");
    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CAssetSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615002()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;
    tEnd = time(NULL);
    LOGSYSTEM("【jc_tasset】表同步，同步资产单元表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "资产单元同步完成", "");
}

//AS_数据同步_组合信息

int FUNCTION_CALL_MODE F2615003(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【jc_tcombi】表同步，开始同步组合信息表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CCombiSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615003()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【jc_tcombi】表同步，同步组合信息表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "组合信息同步完成", "");
}


//AS_数据同步_股东信息

int FUNCTION_CALL_MODE F2615005(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【jc_tstockholder】表同步，开始同步股东信息表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CStockholderSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615005()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【jc_tstockholder】表同步，同步股东信息表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "股东信息同步完成", "");
}

//AS_数据同步_股东与账户关系

int FUNCTION_CALL_MODE F2615006(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【jc_tentruststockholder】表同步，开始同步股东与账户关系表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CEntrustStockholderSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615006()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【jc_tentruststockholder】表同步，同步股东与账户关系表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "股东与账户关系同步完成", "");
}

//AS_数据同步_账户权限

int FUNCTION_CALL_MODE F2615012(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【jc_tfundright】表同步，开始同步账户权限表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CFundRightSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615012()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【jc_tfundright】表同步，同步账户权限表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "账户权限同步完成", "");
}

//AS_数据同步_证券资料

int FUNCTION_CALL_MODE F2615016(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【jc_tstock】表同步，开始同步证券信息表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CStockSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615016()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }

    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【jc_tstock】表同步，同步证券信息表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "证券信息同步完成", "");
}

//AS_数据同步_债券属性

int FUNCTION_CALL_MODE F2615017(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【jc_tbondproperty】表同步，开始同步债券属性表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CBondpropertySync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615017()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【jc_tbondproperty】表同步，同步债券属性表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "债券属性同步完成", "");
}

//AS_数据同步_期货信息

int FUNCTION_CALL_MODE F2615019(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【jc_tfuturesinfo】表同步，开始同步期货信息表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CFuturesInfoSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615019()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【jc_tfuturesinfo】表同步，同步期货信息表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "期货信息同步完成", "");
}
//AS_数据同步_期权属性

int FUNCTION_CALL_MODE F2615020(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【jc_toptionproperty】表同步，开始同步期权属性表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new COptionSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615020()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【jc_toptionproperty】表同步，同步期权属性表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "期权属性同步完成", "");
}

//AS_数据同步_发行人

int FUNCTION_CALL_MODE F2615030(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【jc_tissuer】表同步，开始同步发行人表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CIssuerSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615030()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【jc_tissuer】表同步，同步发行人表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "发行人同步完成", "");
}

//AS_数据同步_证券信息（正式初始化）

int FUNCTION_CALL_MODE F2615151(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【jc_tstock】表同步，开始同步证券信息（正式初始化）表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CStockInfoModifySync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615151()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【jc_tstock】表同步，同步证券信息（正式初始化）表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "证券信息（正式初始化）同步完成", "");
}

//AS_数据同步_交易对手

int FUNCTION_CALL_MODE F2615032(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【jc_ttraderival】表同步，开始同步交易对手表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CTraderivalSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615032()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【jc_ttraderival】表同步，同步交易对手表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "交易对手同步完成", "");
}

//AS_数据同步_沪深费用

int FUNCTION_CALL_MODE F2615051(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【jc_tfeehs】表同步，开始同步沪深费用表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CFeehsSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615051()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【jc_tfeehs】表同步，同步沪深费用表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "沪深费用同步完成", "");
}

//AS_数据同步_沪深费用明细

int FUNCTION_CALL_MODE F2615052(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【jc_tfeedetailhs】表同步，开始同步沪深费用明细表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CFeedetailhsSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615052()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【jc_tfeedetailhs】表同步，同步沪深费用明细表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "沪深费用明细同步完成", "");
}

//AS_数据同步_期货费用

int FUNCTION_CALL_MODE F2615054(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【jc_tfeeqh】表同步，开始同步期货费用表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CFeeqhSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615054()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【jc_tfeeqh】表同步，同步期货费用表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "期货费用同步完成", "");
}

//AS_数据同步_期货费用明细

int FUNCTION_CALL_MODE F2615055(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【jc_tfeedetailqh】表同步，开始同步期货费用明细表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CFeedetailqhSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615055()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【jc_tfeedetailqh】表同步，同步期货费用明细表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "期货费用明细同步完成", "");
}

//AS_数据同步_资金账户

int FUNCTION_CALL_MODE F2615004(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【jc_tcapitalaccount】表同步，开始同步资金账户表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CCapitalaccountSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615004()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【jc_tcapitalaccount】表同步，同步资金账户表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "资金账户同步完成", "");
}

//AS_数据同步_债券利率

int FUNCTION_CALL_MODE F2615063(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【jc_tbondrate】表同步，开始同步债券利率表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CBondrateSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615063()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【jc_tbondrate】表同步，同步债券利率表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "债券利率同步完成", "");
}

//AS_数据同步_账户分组类型

int FUNCTION_CALL_MODE F2615088(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【jc_taccountgrouptype】表同步，开始同步账户分组类型表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CAccountgrouptypeSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615088()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【jc_taccountgrouptype】表同步，同步账户分组类型表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "账户分组类型同步完成", "");
}

//AS_数据同步_账户分组

int FUNCTION_CALL_MODE F2615089(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【jc_taccountgroup】表同步，开始同步账户分组表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CAccountgroupSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615089()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【jc_taccountgroup】表同步，同步账户分组表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "账户分组同步完成", "");
}

//AS_数据同步_账户分组对应基金组合

int FUNCTION_CALL_MODE F2615090(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【jc_tgroupfundcombi】表同步，开始同步账户分组对应基金组合表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CGroupfundcombiSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615090()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【jc_tgroupfundcombi】表同步，同步账户分组对应基金组合表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "账户分组对应基金组合同步完成", "");
}

//AS_数据同步_交易席位

int FUNCTION_CALL_MODE F2615008(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【jc_ttradeseat】表同步，开始同步交易席位表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CTradeseatSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615008()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【jc_ttradeseat】表同步，同步交易席位表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "交易席位同步完成", "");
}

//AS_数据同步_现货资产

int FUNCTION_CALL_MODE F2615110(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【uft_tassetday】表同步，开始同步现货资产表...");
    //return PackAnswerPackage(lpOutPacker, 0, "现货资产同步完成", "");
    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CAssetdaySync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615110()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【uft_tassetday】表同步，同步现货资产表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "现货资产同步完成", "");
}

//AS_数据同步_组合持仓

int FUNCTION_CALL_MODE F2615108(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【uft_tunitstock】表同步，开始同步组合持仓表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CUnitstockSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615108()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【uft_tunitstock】表同步，同步组合持仓表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "组合持仓同步完成", "");
}

//AS_数据同步_融资融券资产

int FUNCTION_CALL_MODE F2615126(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【uft_trzrqcash】表同步，开始同步融资融券资产表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CRzrqcashSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615126()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【uft_trzrqcash】表同步，同步融资融券资产表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "融资融券资产同步完成", "");
}

//AS_数据同步_持仓可用明细

int FUNCTION_CALL_MODE F2615123(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【uft_tftrenabledetail】表同步，开始同步持仓可用明细表...");
    //return PackAnswerPackage(lpOutPacker, 0, "持仓可用明细同步完成", "");
    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CFtrenabledetailSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615123()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【uft_tftrenabledetail】表同步，同步持仓可用明细表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "持仓可用明细同步完成", "");
}

//AS_数据同步_持仓明细

int FUNCTION_CALL_MODE F2615109(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【uft_tholdingdetail】表同步，开始同步持仓明细表...");   
    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CHoldingdetailSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615109()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【uft_tholdingdetail】表同步，同步持仓明细表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "持仓明细同步完成", "");
}

//AS_数据同步_交易日

int FUNCTION_CALL_MODE F2615010(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【jc_ttradedate】表同步，开始同步交易日表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CTradedateSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615010()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【jc_ttradedate】表同步，同步交易日完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "交易日同步完成", "");
}

//AS_数据同步_期货资产

int FUNCTION_CALL_MODE F2615111(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【uft_tfuturecash】表同步，开始同步期货资产表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CFuturecashSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615111()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【uft_tfuturecash_uc】表同步，同步期货资产完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "期货资产同步完成", "");
}

//AS_数据同步_期权资产

int FUNCTION_CALL_MODE F2615112(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【uft_toptioncash】表同步，开始同步期权资产表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new COptioncashSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615112()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【uft_toptioncash】表同步，同步期权资产完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "期权资产同步完成", "");
}

//AS_数据同步_实例持仓资产

int FUNCTION_CALL_MODE F2615113(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【uft_tinstancestock】表同步，开始同步实例持仓表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CInstancestockSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615113()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【uft_tinstancestock】表同步，同步实例持仓完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "实例持仓同步完成", "");
}

//AS_数据同步_业务处理配置

int FUNCTION_CALL_MODE F2615158(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【uft_tbusinessdealconfig】表同步，开始同步业务处理配置表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CBusinessdealconfigSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615158()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【uft_tbusinessdealconfig】表同步，同步业务处理配置完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "业务处理配置同步完成", "");
}

//AS_数据同步_银行间场外待交割业务

int FUNCTION_CALL_MODE F2615159(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【uft_toutpendsettle】表同步，开始同步银行间场外待交割业务表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new COutpendsettleSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615159()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【uft_toutpendsettle】表同步，同步银行间场外待交割业务完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "银行间场外待交割业务同步完成", "");
}

//AS_数据同步_银行间在途回购

int FUNCTION_CALL_MODE F2615160(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【uft_tbankhgregister】表同步，开始同步银行间在途回购表...");
    //return PackAnswerPackage(lpOutPacker, 0, "银行间在途回购同步完成", ""); 
    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CBankhgregisterSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615160()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【uft_tbankhgregister】表同步，同步银行间在途回购完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "银行间在途回购同步完成", "");
}

//AS_数据同步_银行间在途回购质押券

int FUNCTION_CALL_MODE F2615161(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【uft_thgmortagage】表同步，开始同步银行间在途回购质押券表...");
    //return PackAnswerPackage(lpOutPacker, 0, "在途回购质押券表同步完成", "");
    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CHgmortagageSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615161()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【uft_thgmortagage】表同步，同步在途回购质押券表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "在途回购质押券表同步完成", "");
}

//AS_数据同步_场外执行确认

int FUNCTION_CALL_MODE F2615162(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【uft_toutconfirm】表同步，开始同步场外执行确认表...");
    //return PackAnswerPackage(lpOutPacker, 0, "场外执行确认表同步完成", "");
    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new COutconfirmSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615162()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【uft_toutconfirm】表同步，同步场外执行确认表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "场外执行确认表同步完成", "");
}

//AS_数据同步_账户资产

int FUNCTION_CALL_MODE F2615119(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【hg_tfundasset】表同步，开始同步账户资产表...");
    //return PackAnswerPackage(lpOutPacker, 0, "账户资产表同步完成", "");
    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CFundassetSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615119()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【hg_tfundasset】表同步，同步账户资产表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "账户资产表同步完成", "");
}

//AS_数据同步_资产单元资产

int FUNCTION_CALL_MODE F2615124(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【uft_tassetasset】表同步，开始同步资产单元资产表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CAssetassetSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615124()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【uft_tassetasset】表同步，同步资产单元资产表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "资产单元资产表同步完成", "");
}

//AS_数据同步_港股通公司行为信息

int FUNCTION_CALL_MODE F2615163(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【jc_thktzxxinfo】表同步，开始同步港股通公司行为信息表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CHktzxxinfoSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615163()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【jc_thktzxxinfo】表同步，同步港股通公司行为信息表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "港股通公司行为信息表同步完成", "");
}

//AS_数据同步_在途回购业务_预清算

int FUNCTION_CALL_MODE F2615144(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【uft_thgregister】表同步，开始同步在途回购业务预清算表...");
    //return PackAnswerPackage(lpOutPacker, 0, "在途回购业务预清算表同步完成", "");
    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CHgregisterSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615144()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【uft_thgregister】表同步，同步在途回购业务预清算表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "在途回购业务预清算表同步完成", "");
}
//AS_数据同步_资金手工业务流水

int FUNCTION_CALL_MODE F2615128(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【uft_tmanualcash】表同步，开始同步资金手工业务流水预清算表...");
    //return PackAnswerPackage(lpOutPacker, 0, "资金手工业务流水预清算表同步完成", "");
    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CManualcashSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615128()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【uft_tmanualcash】表同步，同步资金手工业务流水预清算表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "资金手工业务流水预清算表同步完成", "");
}

//AS_数据同步_证券手工业务流水

int FUNCTION_CALL_MODE F2615129(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【uft_tmanualstock】表同步，开始同步证券手工业务流水预清算表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CManualstockSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615129()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【uft_tmanualstock】表同步，同步证券手工业务流水预清算表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "证券手工业务流水预清算表同步完成", "");
}

//AS_数据同步_资金类业务明细

int FUNCTION_CALL_MODE F2615114(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【uft_tcashbusiness】表同步，开始同步资金类业务明细预清算表...");
    //return PackAnswerPackage(lpOutPacker, 0, "资金类业务明细预清算表同步完成", "");
    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CCashbusinessSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615114()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【uft_tcashbusiness】表同步，同步资金类业务明细预清算表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "资金类业务明细预清算表同步完成", "");
}

//AS_数据同步_证券类业务明细

int FUNCTION_CALL_MODE F2615115(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【uft_tstockbusiness】表同步，开始同步证券类业务明细预清算表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CStockbusinessSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615115()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【uft_tstockbusiness】表同步，同步证券类业务明细预清算表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "证券类业务明细预清算表同步完成", "");
}

//AS_数据同步_未完成业务明细

int FUNCTION_CALL_MODE F2615116(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【uft_tunfinishedbusin】表同步，开始同步未完成业务明细预清算表...");
    //return PackAnswerPackage(lpOutPacker, 0, "未完成业务明细预清算表同步完成", "");
    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CUnfinishedbusinSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615116()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【uft_tunfinishedbusin】表同步，同步未完成业务明细预清算表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "未完成业务明细预清算表同步完成", "");
}
//AS_数据同步_待交割业务

int FUNCTION_CALL_MODE F2615146(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【uft_tpendsettle】表同步，开始同步待交割业务预清算表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CPendsettleSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615146()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【uft_tpendsettle】表同步，同步待交割业务预清算表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "待交割业务预清算表同步完成", "");
}

//AS_数据同步_期货账户清算状态

int FUNCTION_CALL_MODE F2615164(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【jc_ttradefund】表同步，开始同步期货账户清算状态表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CTradefundSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615164()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【jc_ttradefund】表同步，同步期货账户清算状态表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "期货账户清算状态表同步完成", "");
}

//AS_数据同步_现货资产（正式初始化）

int FUNCTION_CALL_MODE F2615131(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【uft_tassetday_sync】表同步，开始同步现货资产（正式初始化）表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CAssetdayZscshSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615131()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【uft_tassetday_sync】表同步，同步现货资产（正式初始化）表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "现货资产（正式初始化）表同步完成", "");
}
//AS_数据同步_期货资产（正式初始化）

int FUNCTION_CALL_MODE F2615132(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【uft_tfuturecash_sync】表同步，开始同步期货资产（正式初始化）表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CFuturecashZscshSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615132()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【uft_tfuturecash_sync】表同步，同步期货资产（正式初始化）表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "期货资产（正式初始化）表同步完成", "");
}
//AS_数据同步_期权资产（正式初始化）

int FUNCTION_CALL_MODE F2615133(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【uft_toptioncash_sync】表同步，开始同步期权资产（正式初始化）表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new COptioncashZscshSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615133()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【uft_toptioncash_sync】表同步，同步期权资产（正式初始化）表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "期权资产（正式初始化）表同步完成", "");
}

//AS_数据同步_融资融券资产（正式初始化）

int FUNCTION_CALL_MODE F2615134(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【uft_trzrqcash_sync】表同步，开始同步融资融券资产（正式初始化）表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CRzrqcashZscshSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615134()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【uft_trzrqcash_sync】表同步，同步融资融券资产（正式初始化）表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "融资融券资产（正式初始化）表同步完成", "");
}

//AS_数据同步_组合持仓（正式初始化）

int FUNCTION_CALL_MODE F2615135(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【uft_tunitstock_sync】表同步，开始同步组合持仓（正式初始化）表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CUnitstockZscshSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615135()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【uft_tunitstock_sync】表同步，同步组合持仓（正式初始化）表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "组合持仓（正式初始化）表同步完成", "");
}

//AS_数据同步_实例持仓（正式初始化）

int FUNCTION_CALL_MODE F2615136(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【uft_tinstancestock_sync】表同步，开始同步实例持仓（正式初始化）表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CInstancestockZscshSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615136()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【uft_tinstancestock_sync】表同步，同步实例持仓（正式初始化）表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "实例持仓（正式初始化）表同步完成", "");
}

//AS_数据同步_在途回购业务（正式初始化）

int FUNCTION_CALL_MODE F2615137(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【uft_thgregister_sync】表同步，开始同步在途回购业务（正式初始化）表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CHgregisterZscshSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615137()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【uft_thgregister_sync】表同步，同步在途回购业务（正式初始化）表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "在途回购业务（正式初始化）表同步完成", "");
}

//AS_数据同步_资金冻结解冻明细（正式初始化）

int FUNCTION_CALL_MODE F2615138(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【uft_tmanualcash_sync】表同步，开始同步资金冻结解冻明细（正式初始化）表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CManualcashZscshSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615138()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【uft_tmanualcash_sync】表同步，同步资金冻结解冻明细（正式初始化）表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "资金冻结解冻明细（正式初始化）表同步完成", "");
}

//AS_数据同步_证券冻结解冻明细（正式初始化）

int FUNCTION_CALL_MODE F2615139(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【uft_tmanualstock_sync】表同步，开始同步证券冻结解冻明细（正式初始化）表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CManualstockZscshSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615139()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【uft_tmanualstock_sync】表同步，同步证券冻结解冻明细（正式初始化）表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "证券冻结解冻明细（正式初始化）表同步完成", "");
}

//AS_数据同步_资金类业务明细（正式初始化）

int FUNCTION_CALL_MODE F2615140(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【uft_tcashbusiness_sync】表同步，开始同步资金类业务明细（正式初始化）表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CCashbusinessZscshSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615140()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【uft_tcashbusiness_sync】表同步，同步资金类业务明细（正式初始化）表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "资金类业务明细（正式初始化）表同步完成", "");
}

//AS_数据同步_证券类业务明细（正式初始化）

int FUNCTION_CALL_MODE F2615141(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【uft_tstockbusiness_sync】表同步，开始同步证券类业务明细（正式初始化）表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CStockbusinessZscshSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615141()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【uft_tstockbusiness_sync】表同步，同步证券类业务明细（正式初始化）表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "证券类业务明细（正式初始化）表同步完成", "");
}

//AS_数据同步_未完成业务（正式初始化）

int FUNCTION_CALL_MODE F2615142(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【uft_tunfinishedbusin_sync】表同步，开始同步未完成业务（正式初始化）表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CUnfinishedbusinZscshSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615142()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【uft_tunfinishedbusin_sync】表同步，同步未完成业务（正式初始化）表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "未完成业务（正式初始化）表同步完成", "");
}

//AS_数据同步_待交割业务（正式初始化）

int FUNCTION_CALL_MODE F2615145(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【uft_tpendsettle_sync】表同步，开始同步待交割业务（正式初始化）表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CPendsettleZscshSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615145()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【uft_tpendsettle_sync】表同步，同步待交割业务（正式初始化）表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "待交割业务（正式初始化）表同步完成", "");
}

//AS_数据同步_持仓明细（正式初始化）

int FUNCTION_CALL_MODE F2615153(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【uft_tholdingdetail_sync】表同步，开始同步持仓明细（正式初始化）表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CHoldingdetailZscshSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615153()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【uft_tholdingdetail_sync】表同步，同步持仓明细（正式初始化）表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "持仓明细（正式初始化）表同步完成", "");
}

//AS_数据同步_持仓可用明细（正式初始化）

int FUNCTION_CALL_MODE F2615154(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【uft_tftrenabledetail_sync】表同步，开始同步持仓可用明细（正式初始化）表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CFtrenabledetailZscshSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615154()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【uft_tftrenabledetail_sync】表同步，同步持仓可用明细（正式初始化）表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "持仓可用明细（正式初始化）表同步完成", "");
}

//AS_数据同步_期货账户清算状态（正式初始化）

int FUNCTION_CALL_MODE F2615157(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【jc_ttradefund_sync】表同步，开始同步期货账户清算状态（正式初始化）表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CTradefundZscshSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615157()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【jc_ttradefund_sync】表同步，同步期货账户清算状态（正式初始化）表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "期货账户清算状态（正式初始化）表同步完成", "");
}

//AS_数据同步_期货保证金比例

int FUNCTION_CALL_MODE F2615027(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【jc_tfuturedepositratio】表同步，开始同步期货保证金比例表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CFuturedepositratioSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615027()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【jc_tfuturedepositratio】表同步，同步期货保证金比例表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "期货保证金比例表同步完成", "");
}

//AS_数据同步_期货跨品种套利组合表

int FUNCTION_CALL_MODE F2615165(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【jc_tfuturekindarbitragecombi】表同步，开始同步期货跨品种套利组合表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CFutureKindArbitrageCombiSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615165()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【jc_tfuturekindarbitragecombi】表同步，同步期货跨品种套利组合表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "期货跨品种套利组合表同步完成", "");
}

//AS_数据同步_席位

int FUNCTION_CALL_MODE F2615007(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【jc_tseat】表同步，开始同步席位表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CSeatSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615007()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【jc_tseat】表同步，同步席位表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "席位表同步完成", "");
}

//AS_数据同步_系统信息

int FUNCTION_CALL_MODE F2615009(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【jc_tsysteminfo】表同步，开始同步系统信息表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CSysteminfoSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615009()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【jc_tsysteminfo】表同步，同步系统信息表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "系统信息表同步完成", "");
}

//AS_数据同步_营业部

int FUNCTION_CALL_MODE F2615014(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【jc_tsecuritiesbranch】表同步，开始同步营业部表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CSecuritiesbranchSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615014()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【jc_tsecuritiesbranch】表同步，同步营业部表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "营业部表同步完成", "");
}

//AS_数据同步_债券利息税信息

int FUNCTION_CALL_MODE F2615018(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【jc_tbonddetailproperty】表同步，开始同步债券利息税信息表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CBonddetailpropertySync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615018()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【jc_tbonddetailproperty】表同步，同步债券利息税信息表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "债券利息税信息表同步完成", "");
}

//AS_数据同步_ETF证券

int FUNCTION_CALL_MODE F2615022(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【jc_tetfstocklistinfo】表同步，开始同步ETF证券表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CEtfstocklistinfoSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615022()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【jc_tetfstocklistinfo】表同步，同步ETF证券表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "ETF证券表同步完成", "");
}

//AS_数据同步_回购参数

int FUNCTION_CALL_MODE F2615023(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【jc_thgratio】表同步，开始同步回购参数表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CHgratioSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615023()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【jc_thgratio】表同步，同步回购参数表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "回购参数表同步完成", "");
}

//AS_数据同步_券商信息

int FUNCTION_CALL_MODE F2615013(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【jc_tbroker】表同步，开始同步券商信息表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CBrokerSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615013()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【jc_tbroker】表同步，同步券商信息表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "券商信息表同步完成", "");
}

//AS_数据同步_ETF信息

int FUNCTION_CALL_MODE F2615021(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【jc_tetfbasicinfo】表同步，开始同步ETF信息表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CEtfbasicinfoSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615021()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【jc_tetfbasicinfo】表同步，同步ETF信息表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "ETF信息表同步完成", "");
}

//AS_数据同步_融资融券标的券

int FUNCTION_CALL_MODE F2615041(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【jc_trzrqstock】表同步，开始同步融资融券标的券表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CRzrqstockSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615041()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【jc_trzrqstock】表同步，同步融资融券标的券表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "融资融券标的券表同步完成", "");
}

//AS_数据同步_中登基金行情

int FUNCTION_CALL_MODE F2615042(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【jc_tzdjjhq】表同步，开始同步中登基金行情表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CZdjjhqSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615042()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【jc_tzdjjhq】表同步，同步中登基金行情表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "中登基金行情表同步完成", "");
}

//AS_数据同步_沪深交易费配置

int FUNCTION_CALL_MODE F2615053(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【jc_ttradefeeconfighs】表同步，开始同步沪深交易费配置表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CTradefeeconfighsSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615053()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【jc_ttradefeeconfighs】表同步，同步沪深交易费配置表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "沪深交易费配置表同步完成", "");
}

//AS_数据同步_部门信息

int FUNCTION_CALL_MODE F2615056(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【jc_tdept】表同步，开始同步部门信息表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CDeptSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615056()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【jc_tdept】表同步，同步部门信息表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "部门信息表同步完成", "");
}

//AS_数据同步_融资融券证券参数

int FUNCTION_CALL_MODE F2615057(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【jc_trzrqstockset】表同步，开始同步融资融券证券参数表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CRzrqstocksetSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615057()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【jc_trzrqstockset】表同步，同步融资融券证券参数表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "融资融券证券参数表同步完成", "");
}

//AS_数据同步_营业部扩展属性

int FUNCTION_CALL_MODE F2615062(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【jc_tsecuritiesbranchex】表同步，开始同步营业部扩展属性表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CSecuritiesbranchexSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615062()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【jc_tsecuritiesbranchex】表同步，同步营业部扩展属性表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "营业部扩展属性表同步完成", "");
}

//AS_数据同步_公司行为数据

int FUNCTION_CALL_MODE F2615068(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【jc_tcorpactioninfo】表同步，开始同步公司行为数据表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CCorpactioninfoSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615068()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【jc_tcorpactioninfo】表同步，同步公司行为数据表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "公司行为数据表同步完成", "");
}

//AS_数据同步_融资融券配置

int FUNCTION_CALL_MODE F2615071(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【jc_trzrqconfig】表同步，开始同步融资融券配置表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CRzrqconfigSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615071()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【jc_trzrqconfig】表同步，同步融资融券配置表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "融资融券配置表同步完成", "");
}

//AS_数据同步_汇率表

int FUNCTION_CALL_MODE F2615073(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【jc_tcurrencyrate】表同步，开始同步汇率表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CCurrencyrateSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615073()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【jc_tcurrencyrate】表同步，同步汇率表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "汇率表同步完成", "");
}

//AS_数据同步_利率参数

int FUNCTION_CALL_MODE F2615074(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【jc_tinterestrate】表同步，开始同步利率参数表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CInterestrateSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615074()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【jc_tinterestrate】表同步，同步利率参数表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "利率参数表同步完成", "");
}

//AS_数据同步_银行账户信息(本方)

int FUNCTION_CALL_MODE F2615077(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【jc_tselfbankaccount】表同步，开始同步银行账户信息(本方)表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CSelfbankaccountSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615077()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【jc_tselfbankaccount】表同步，同步银行账户信息(本方)表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "银行账户信息(本方)表同步完成", "");
}

//AS_数据同步_银行账户信息(对手方)

int FUNCTION_CALL_MODE F2615078(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【jc_tbankaccount】表同步，开始同步银行账户信息(对手方)表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CBankaccountSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615078()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【jc_tbankaccount】表同步，同步银行账户信息(对手方)表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "银行账户信息(对手方)表同步完成", "");
}

//AS_数据同步_上证LOF基金业务参数

int FUNCTION_CALL_MODE F2615081(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【jc_tloffundparam】表同步，开始同步上证LOF基金业务参数表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CLoffundparamSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615081()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【jc_tloffundparam】表同步，同步上证LOF基金业务参数表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "上证LOF基金业务参数表同步完成", "");
}

//AS_数据同步_组合策略代码

int FUNCTION_CALL_MODE F2615082(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【jc_tsjsqqzhcl】表同步，开始同步上证LOF基金业务参数表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CSjsqqzhclSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615082()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【jc_tsjsqqzhcl】表同步，同步组合策略代码表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "组合策略代码表同步完成", "");
}

//AS_数据同步_银行信息

int FUNCTION_CALL_MODE F2615084(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【jc_tbankinfo】表同步，开始同步银行信息表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CBankinfoSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615084()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【jc_tbankinfo】表同步，同步银行信息表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "银行信息表同步完成", "");
}

//AS_数据同步_期货品种

int FUNCTION_CALL_MODE F2615085(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【jc_tfuturekind】表同步，开始同步期货品种表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CFuturekindSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615085()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【jc_tfuturekind】表同步，同步期货品种表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "期货品种表同步完成", "");
}

//AS_数据同步_最小价差

int FUNCTION_CALL_MODE F2615086(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【jc_tpriceinterval】表同步，开始同步最小价差表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CPriceintervalSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615086()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【jc_tpriceinterval】表同步，同步最小价差表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "最小价差表同步完成", "");
}

//AS_数据同步_营业部资金账号信息

int FUNCTION_CALL_MODE F2615087(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【jc_tbranchcaptacctinfo】表同步，开始同步营业部资金账号信息表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CBranchcaptacctinfoSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615087()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【jc_tbranchcaptacctinfo】表同步，同步营业部资金账号信息表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "营业部资金账号信息表同步完成", "");
}

//AS_数据同步_操作员账户分组类型权限

int FUNCTION_CALL_MODE F2615091(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【jc_topacctgrouptyperight】表同步，开始同步操作员账户分组类型权限表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new COpacctgrouptyperightSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615091()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【jc_topacctgrouptyperight】表同步，同步操作员账户分组类型权限表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "操作员账户分组类型权限表同步完成", "");
}

//AS_数据同步_期货申报费用设置

int FUNCTION_CALL_MODE F2615092(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【jc_tcontainfee】表同步，开始同步期货申报费用设置表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CContainfeeSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615092()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【jc_tcontainfee】表同步，同步期货申报费用设置表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "期货申报费用设置表同步完成", "");
}

//AS_数据同步_费用套属性

int FUNCTION_CALL_MODE F2615094(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【jc_tfeesetproperty】表同步，开始同步费用套属性表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CFeesetpropertySync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615094()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【jc_tfeesetproperty】表同步，同步费用套属性表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "费用套属性表同步完成", "");
}

//AS_数据同步_交易费包含的费用设置费用套表

int FUNCTION_CALL_MODE F2615095(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【jc_tcontainfeeset】表同步，开始同步交易费包含的费用设置费用套表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CContainfeesetSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615095()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【jc_tcontainfeeset】表同步，同步交易费包含的费用设置费用套表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "交易费包含的费用设置费用套表同步完成", "");
}

//AS_数据同步_现货市场费用套表

int FUNCTION_CALL_MODE F2615096(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【jc_tfeeseths】表同步，开始同步现货市场费用套表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CFeesethsSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615096()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【jc_tfeeseths】表同步，同步现货市场费用套表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "现货市场费用套表同步完成", "");
}

//AS_数据同步_现货市场费用套明细

int FUNCTION_CALL_MODE F2615097(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【jc_tfeedetailseths】表同步，开始同步现货市场费用套明细表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CFeedetailsethsSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615097()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【jc_tfeedetailseths】表同步，同步现货市场费用套明细表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "现货市场费用套明细表同步完成", "");
}

//AS_数据同步_委托审批设置

int FUNCTION_CALL_MODE F2615098(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【jc_tentrustapproveset】表同步，开始同步委托审批设置表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CEntrustapprovesetSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615098()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【jc_tentrustapproveset】表同步，同步委托审批设置表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "委托审批设置表同步完成", "");
}

//AS_数据同步_操作员状态

int FUNCTION_CALL_MODE F2615149(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【jc_toperatorstatus】表同步，开始同步操作员状态表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new COperatorstatusSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615149()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【jc_toperatorstatus】表同步，同步操作员状态表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "操作员状态表同步完成", "");
}

//AS_数据同步_TA信息

int FUNCTION_CALL_MODE F2615155(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【jc_ttainfo】表同步，开始同步TA信息表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CTainfoSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615155()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【jc_ttainfo】表同步，同步TA信息表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "TA信息表同步完成", "");
}

//AS_数据同步_TA接口处理模板

int FUNCTION_CALL_MODE F2615156(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【jc_ttadealconfig】表同步，开始同步TA接口处理模板表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CTadealconfigSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615156()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【jc_ttadealconfig】表同步，同步TA接口处理模板表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "TA接口处理模板表同步完成", "");
}

//AS_数据同步_期权保证金信息

int FUNCTION_CALL_MODE F2615028(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【jc_toptiondepositset】表同步，开始同步期权保证金信息表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new COptiondepositsetSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615028()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【jc_toptiondepositset】表同步，同步期权保证金信息表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "期权保证金信息表同步完成", "");
}

//AS_数据同步_公司信息

int FUNCTION_CALL_MODE F2615034(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【jc_tcompany】表同步，开始同步公司信息表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CCompanySync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615034()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【jc_tcompany】表同步，同步公司信息表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "公司信息表同步完成", "");
}

//AS_数据同步_证券自定义分类

int FUNCTION_CALL_MODE F2615166(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【jc_tcustomclass】表同步，开始同步证券自定义分类表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CCustomclassSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615166()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【jc_tcustomclass】表同步，同步证券自定义分类表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "证券自定义分类表同步完成", "");
}

//AS_数据同步_自定义分类信息

int FUNCTION_CALL_MODE F2615167(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【jc_tcustomdictionary】表同步，开始同步自定义分类信息表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CCustomdictionarySync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615167()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【jc_tcustomdictionary】表同步，同步自定义分类信息表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "自定义分类信息表同步完成", "");
}


//AS_数据同步_UFT沪深申报序列

int FUNCTION_CALL_MODE F2615117(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【uft_tsequence】表同步，开始同步UFT沪深申报序列表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CSquenceSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615117()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【uft_tsequence】表同步，同步UFT沪深申报序列表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "UFT沪深申报序列表同步完成", "");
}

//AS_数据同步_操作员

int FUNCTION_CALL_MODE F2615011(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【jc_toperator】表同步，开始同步操作员表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new COperatorSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615011()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【jc_toperator】表同步，同步操作员表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "操作员表同步完成", "");
}

//AS_数据同步_系统参数值

int FUNCTION_CALL_MODE F2615066(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【jc_tsysparamvalue】表同步，开始同步系统参数值表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CSysparamvalueSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615066()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【jc_tsysparamvalue】表同步，同步系统参数值表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "系统参数值表同步完成", "");
}


//AS_数据同步_市场信息

int FUNCTION_CALL_MODE F2615015(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【jc_tmarketinfo】表同步，开始同步市场信息表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CMarketinfoSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615015()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【jc_tmarketinfo】表同步，同步市场信息表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "市场信息表同步完成", "");
}

//AS_数据同步_期货套利代码

int FUNCTION_CALL_MODE F2615065(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【jc_tfuturearbitrageinfo】表同步，开始同步期货套利代码表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CFuturearbitrageinfoSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615065()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【jc_tfuturearbitrageinfo】表同步，同步期货套利代码表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "期货套利代码表同步完成", "");
}

//AS_数据同步_深圳分级基金盲拆盲合

int FUNCTION_CALL_MODE F2615093(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【uft_tunitstock】表同步，开始同步深圳分级基金盲拆盲合表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CSzfundestimateSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615093()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【uft_tunitstock】表同步，同步深圳分级基金盲拆盲合表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "深圳分级基金盲拆盲合表同步完成", "");
}

//AS_数据同步_融资融券负债信息

int FUNCTION_CALL_MODE F2615125(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【uft_tfinancedebit】表同步，开始同步融资融券负债信息表...");
    //return PackAnswerPackage(lpOutPacker, 0, "融资融券负债信息表同步完成", "");
    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CFinancedebitSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615125()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【uft_tfinancedebit】表同步，同步融资融券负债信息表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "融资融券负债信息表同步完成", "");
}

//AS_数据同步_期权组合持仓

int FUNCTION_CALL_MODE F2615083(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【uft_toptioncombi_unitstock】表同步，开始同步期权组合持仓表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new COptioncombiSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615083()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【uft_toptioncombi_unitstock】表同步，同步期权组合持仓表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "期权组合持仓表同步完成", "");
}

//AS_数据同步_科目余额

int FUNCTION_CALL_MODE F2615168(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【uft_tsubjectdata】表同步，开始同步科目余额表...");
    //return PackAnswerPackage(lpOutPacker, 0, "科目余额表同步完成", "");
    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CSubjectdataSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615168()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【uft_tsubjectdata】表同步，同步科目余额表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "科目余额表同步完成", "");
}

//AS_数据同步_科目余额（正式初始化）

int FUNCTION_CALL_MODE F2615169(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【uft_tsubjectdata_sync】表同步，开始同步科目余额（正式初始化）表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CSubjectdataZscshSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615169()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【uft_tsubjectdata_sync】表同步，同步科目余额（正式初始化）表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "科目余额（正式初始化）表同步完成", "");
}

//AS_数据同步_期货保证券在途信息

int FUNCTION_CALL_MODE F2615170(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【uft_tfutureguaranteed】表同步，开始同步期货保证券在途信息表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CFutureguaranteedsecuritySync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615170()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【uft_tfutureguaranteed】表同步，同步期货保证券在途信息表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "期货保证券在途信息表同步完成", "");
}

//AS_数据同步_投资基金信息

int FUNCTION_CALL_MODE F2615172(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【jc_tinvestfundinfo】表同步，开始同步投资基金信息表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CInvestfundinfoSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615172()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【jc_tinvestfundinfo】表同步，同步投资基金信息表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "投资基金信息表同步完成", "");
}


//AS_数据同步_特殊业务属性

int FUNCTION_CALL_MODE F2615171(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
    LOGSYSTEM("【jc_tbusinessspecial】表同步，开始同步特殊业务属性表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CBusinessspecialSync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615171()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【jc_tbusinessspecial】表同步，同步特殊业务属性表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "特殊业务属性表同步完成", "");
}


//AS_数据同步_场外执行确认(正式初始化)
int FUNCTION_CALL_MODE F2615173(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker)
{
    LOGSYSTEM("【uft_toutconfirm_sync】表同步，开始同步场外执行确认表(正式初始化)...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new COutconfirmZscshSync(lpContext);

    if (!pSync->doSync(cSyncFlag))
    {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615173()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【uft_toutconfirm_sync】表同步，同步场外执行确认表(正式初始化)完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "场外执行确认表(正式初始化)同步完成", "");
}

int FUNCTION_CALL_MODE F2615174(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) {
     LOGSYSTEM("【jc_tdearmoneysecurity】表同步，开始同步场外执行确认表(正式初始化)...");

    time_t tStart, tEnd;
    tStart = time(NULL);

    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';
    CDataSync *pSync = new CDearMoneySecuritySync(lpContext);

    if (!pSync->doSync(cSyncFlag)) {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615174");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;
    tEnd = time(NULL);
   LOGSYSTEM("【jc_tdearmoneysecurity】表同步，同步券商高利率表(正式初始化)完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "券商高利率表(正式初始化)同步完成", "");
}


//AS_数据同步_证券发行信息表
int FUNCTION_CALL_MODE F2615175(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker)
{
    LOGSYSTEM("【jc_tstockissueinfo】表同步，开始同步证券发行信息表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CStockissueinfoSync(lpContext);

    if (!pSync->doSync(cSyncFlag))
    {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615175()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【jc_tstockissueinfo】表同步，同步证券发行信息表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "证券发行信息表同步完成", "");
}

//AS_数据同步_外部评级机构信息
int FUNCTION_CALL_MODE F2615176(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) 
{
    LOGSYSTEM("【jc_torganization】表同步，开始同步外部评级机构信息表...");
    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new COrganizationSync(lpContext);
    if (!pSync->doSync(cSyncFlag)) 
    {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615176()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【jc_torganization】表同步，同步外部评级机构信息表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "外部评级机构信息表同步完成", "");
}

//AS_数据同步_历史成交流水
int FUNCTION_CALL_MODE F2615177(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker) 
{
    LOGSYSTEM("【uft_thisrealdeal】表同步，开始同步历史成交流水表...");

    time_t tStart, tEnd;
    tStart = time(NULL);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';

    CDataSync* pSync = new CHisRealDealSync(lpContext);
    if (!pSync->doSync(cSyncFlag)) 
    {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615177()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;

    tEnd = time(NULL);
    LOGSYSTEM("【uft_thisrealdeal】表同步，同步历史成交流水表完成，耗时【" << difftime(tEnd, tStart) << "s】");
    return PackAnswerPackage(lpOutPacker, 0, "历史成交流水表同步完成", "");
}

int FUNCTION_CALL_MODE F2615178(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker)
{
    LOGSYSTEM("【uft_tstockbusiness_xh】表同步，开始同步证券调整业务流水_现货交易所...");
    
    // 记录功能号开始调用时间
    time_t tStartTime = time(NULL);
    
    CDataSync* pSync = new CStockBusinessXh(lpContext);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';
    // 开始同步数据
    if (!pSync->doSync(cSyncFlag))
    {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615178()");
        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;
    
    // 记录功能号调用完成时间
    time_t tEndTime = time(NULL);
    LOGSYSTEM("【uft_tstockbusiness_xh】表同步，同步证券调整业务流水_现货交易所完成，耗时【" << difftime(tEndTime, tStartTime) << "s】");
    
    return PackAnswerPackage(lpOutPacker, 0, "同步证券调整业务流水_现货交易所完成", "");
}


int FUNCTION_CALL_MODE F2615179(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker)
{
    LOGSYSTEM("【uft_tstockbusiness_qh】表同步，开始同步证券调整业务流水_期货...");
    // 记录功能号开始调用时间
    time_t tStartTime = time(NULL);
    
    CDataSync* pSync = new CStockBusinessQh(lpContext);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';
    // 开始同步数据
    if (!pSync->doSync(cSyncFlag))
    {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615179()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;
    
    // 记录功能号调用完成时间
    time_t tEndTime = time(NULL);
    LOGSYSTEM("【uft_tstockbusiness_qh】表同步，同步证券调整业务流水_期货完成，耗时【" << difftime(tEndTime, tStartTime) << "s】");
    
    return PackAnswerPackage(lpOutPacker, 0, "同步证券调整业务流水_期货完成", "");
}


int FUNCTION_CALL_MODE F2615180(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker)
{
    LOGSYSTEM("【uft_tstockbusiness_cw】表同步，开始同步证券调整业务流水_场外...");
    // 记录功能号开始调用时间
    time_t tStartTime = time(NULL);
    
    CDataSync* pSync = new CStockBusinessCw(lpContext);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';
    // 开始同步数据
    if (!pSync->doSync(cSyncFlag))
    {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615180()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;
    
    // 记录功能号调用完成时间
    time_t tEndTime = time(NULL);
    LOGSYSTEM("【uft_tstockbusiness_cw】表同步，同步证券调整业务流水_场外完成，耗时【" << difftime(tEndTime, tStartTime) << "s】");
    
    return PackAnswerPackage(lpOutPacker, 0, "同步证券调整业务流水_场外完成", "");
}

int FUNCTION_CALL_MODE F2615181(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker)
{
    LOGSYSTEM("【uft_tstockbusiness_yhj】表同步，开始同步证券调整业务流水_银行间...");
    // 记录功能号开始调用时间
    time_t tStartTime = time(NULL);
    
    CDataSync* pSync = new CStockBusinessYhj(lpContext);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';
    // 开始同步数据
    if (!pSync->doSync(cSyncFlag))
    {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615181()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;
    
    // 记录功能号调用完成时间
    time_t tEndTime = time(NULL);
    LOGSYSTEM("【uft_tstockbusiness_yhj】表同步，同步证券调整业务流水_银行间完成，耗时【" << difftime(tEndTime, tStartTime) << "s】");
    
    return PackAnswerPackage(lpOutPacker, 0, "同步证券调整业务流水_银行间完成", "");
}


int FUNCTION_CALL_MODE F2615182(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker)
{
     LOGSYSTEM("【uft_tstockfrozendetail_xh】表同步，开始同步证券冻结解冻明细流水_现货交易所...");
    // 记录功能号开始调用时间
    time_t tStartTime = time(NULL);
    
    CDataSync* pSync = new CStockFrozenDetailXh(lpContext);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';
    // 开始同步数据
    if (!pSync->doSync(cSyncFlag))
    {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615182()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;
    
    // 记录功能号调用完成时间
    time_t tEndTime = time(NULL);
    LOGSYSTEM("【uft_tstockfrozendetail_xh】表同步，同步证券冻结解冻明细流水_现货交易所完成，耗时【" << difftime(tEndTime, tStartTime) << "s】");
    
    return PackAnswerPackage(lpOutPacker, 0, "同步证券冻结解冻明细流水_现货交易所完成", "");
}

int FUNCTION_CALL_MODE F2615183(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker)
{
     LOGSYSTEM("【uft_tstockfrozendetail_qh】表同步，开始同步证券冻结解冻明细流水_期货...");
    // 记录功能号开始调用时间
    time_t tStartTime = time(NULL);
    
    CDataSync* pSync = new CStockFrozenDetailQh(lpContext);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';
    // 开始同步数据
    if (!pSync->doSync(cSyncFlag))
    {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615183()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;
    
    // 记录功能号调用完成时间
    time_t tEndTime = time(NULL);
    LOGSYSTEM("【uft_tstockfrozendetail_qh】表同步，同步证券冻结解冻明细流水_期货完成，耗时【" << difftime(tEndTime, tStartTime) << "s】");
    
    return PackAnswerPackage(lpOutPacker, 0, "同步证券冻结解冻明细流水_期货完成", "");
}

int FUNCTION_CALL_MODE F2615184(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker)
{
     LOGSYSTEM("【uft_tstockfrozendetail_cw】表同步，开始同步证券冻结解冻明细流水_场外...");
    // 记录功能号开始调用时间
    time_t tStartTime = time(NULL);
    
    CDataSync* pSync = new CStockFrozenDetailCw(lpContext);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';
    // 开始同步数据
    if (!pSync->doSync(cSyncFlag))
    {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615184()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;
    
    // 记录功能号调用完成时间
    time_t tEndTime = time(NULL);
    LOGSYSTEM("【uft_tstockfrozendetail_cw】表同步，同步证券冻结解冻明细流水_场外完成，耗时【" << difftime(tEndTime, tStartTime) << "s】");
    
    return PackAnswerPackage(lpOutPacker, 0, "同步证券冻结解冻明细流水_场外完成", "");
}


int FUNCTION_CALL_MODE F2615185(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker)
{
     LOGSYSTEM("【uft_tstockfrozendetail_yhj】表同步，开始同步证券冻结解冻明细流水_银行间...");
    // 记录功能号开始调用时间
    time_t tStartTime = time(NULL);
    
    CDataSync* pSync = new CStockFrozenDetailYhj(lpContext);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';
    // 开始同步数据
    if (!pSync->doSync(cSyncFlag))
    {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615185()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;
    
    // 记录功能号调用完成时间
    time_t tEndTime = time(NULL);
    LOGSYSTEM("【uft_tstockfrozendetail_yhj】表同步，同步证券冻结解冻明细流水_银行间完成，耗时【" << difftime(tEndTime, tStartTime) << "s】");
    
    return PackAnswerPackage(lpOutPacker, 0, "同步证券冻结解冻明细流水_银行间完成", "");
}


int FUNCTION_CALL_MODE F2615186(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker)
{
     LOGSYSTEM("【uft_tunitstock_xh】表同步，开始同步组合持仓信息_现货交易所...");
    // 记录功能号开始调用时间
    time_t tStartTime = time(NULL);
    
    CDataSync* pSync = new CUnitStockXh(lpContext);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';
    // 开始同步数据
    if (!pSync->doSync(cSyncFlag))
    {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615186()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;
    
    // 记录功能号调用完成时间
    time_t tEndTime = time(NULL);
    LOGSYSTEM("【uft_tunitstock_xh】表同步，同步组合持仓信息_现货交易所完成，耗时【" << difftime(tEndTime, tStartTime) << "s】");
    
    return PackAnswerPackage(lpOutPacker, 0, "同步组合持仓信息_现货交易所完成", "");
}


int FUNCTION_CALL_MODE F2615187(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker)
{
     LOGSYSTEM("【uft_tunitstock_xh_sync】表同步，开始同步组合持仓信息_现货交易所_正式清算...");
    // 记录功能号开始调用时间
    time_t tStartTime = time(NULL);
    
    CDataSync* pSync = new CUnitStockXhSync(lpContext);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';
    // 开始同步数据
    if (!pSync->doSync(cSyncFlag))
    {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615187()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;
    
    // 记录功能号调用完成时间
    time_t tEndTime = time(NULL);
    LOGSYSTEM("【uft_tunitstock_xh_sync】表同步，同步组合持仓信息_现货交易所_正式清算完成，耗时【" << difftime(tEndTime, tStartTime) << "s】");
    
    return PackAnswerPackage(lpOutPacker, 0, "同步组合持仓信息_现货交易所_正式清算完成", "");
}

int FUNCTION_CALL_MODE F2615188(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker)
{
     LOGSYSTEM("【uft_tunitstock_qh】表同步，开始同步组合持仓信息_期货...");
    // 记录功能号开始调用时间
    time_t tStartTime = time(NULL);
    
    CDataSync* pSync = new CUnitStockQh(lpContext);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';
    // 开始同步数据
    if (!pSync->doSync(cSyncFlag))
    {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615188()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;
    
    // 记录功能号调用完成时间
    time_t tEndTime = time(NULL);
    LOGSYSTEM("【uft_tunitstock_qh】表同步，同步组合持仓信息_期货完成，耗时【" << difftime(tEndTime, tStartTime) << "s】");
    
    return PackAnswerPackage(lpOutPacker, 0, "同步组合持仓信息_期货完成", "");
}


int FUNCTION_CALL_MODE F2615189(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker)
{
     LOGSYSTEM("【uft_tunitstock_qh_sync】表同步，开始同步组合持仓信息_期货_正式清算...");
    // 记录功能号开始调用时间
    time_t tStartTime = time(NULL);
    
    CDataSync* pSync = new CUnitStockQhSync(lpContext);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';
    // 开始同步数据
    if (!pSync->doSync(cSyncFlag))
    {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615189()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;
    
    // 记录功能号调用完成时间
    time_t tEndTime = time(NULL);
    LOGSYSTEM("【uft_tunitstock_qh_sync】表同步，同步组合持仓信息_期货_正式清算完成，耗时【" << difftime(tEndTime, tStartTime) << "s】");
    
    return PackAnswerPackage(lpOutPacker, 0, "同步组合持仓信息_期货_正式清算完成", "");
}


int FUNCTION_CALL_MODE F2615190(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker)
{
     LOGSYSTEM("【uft_tunitstock_cw】表同步，开始同步组合持仓信息_场外...");
    // 记录功能号开始调用时间
    time_t tStartTime = time(NULL);
    
    CDataSync* pSync = new CUnitStockCw(lpContext);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';
    // 开始同步数据
    if (!pSync->doSync(cSyncFlag))
    {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615190()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;
    
    // 记录功能号调用完成时间
    time_t tEndTime = time(NULL);
    LOGSYSTEM("【uft_tunitstock_cw】表同步，同步组合持仓信息_场外完成，耗时【" << difftime(tEndTime, tStartTime) << "s】");
    
    return PackAnswerPackage(lpOutPacker, 0, "同步组合持仓信息_场外完成", "");
}


int FUNCTION_CALL_MODE F2615191(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker)
{
     LOGSYSTEM("【uft_tunitstock_cw_sync】表同步，开始同步组合持仓信息_场外_正式清算...");
    // 记录功能号开始调用时间
    time_t tStartTime = time(NULL);
    
    CDataSync* pSync = new CUnitStockCwSync(lpContext);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';
    // 开始同步数据
    if (!pSync->doSync(cSyncFlag))
    {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615191()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;
    
    // 记录功能号调用完成时间
    time_t tEndTime = time(NULL);
    LOGSYSTEM("【uft_tunitstock_cw_sync】表同步，同步组合持仓信息_场外_正式清算完成，耗时【" << difftime(tEndTime, tStartTime) << "s】");
    
    return PackAnswerPackage(lpOutPacker, 0, "同步组合持仓信息_场外_正式清算完成", "");
}


int FUNCTION_CALL_MODE F2615192(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker)
{
     LOGSYSTEM("【uft_tunitstock_yhj】表同步，开始同步组合持仓信息_银行间...");
    // 记录功能号开始调用时间
    time_t tStartTime = time(NULL);
    
    CDataSync* pSync = new CUnitStockYhj(lpContext);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';
    // 开始同步数据
    if (!pSync->doSync(cSyncFlag))
    {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615192()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;
    
    // 记录功能号调用完成时间
    time_t tEndTime = time(NULL);
    LOGSYSTEM("【uft_tunitstock_yhj】表同步，同步组合持仓信息_银行间完成，耗时【" << difftime(tEndTime, tStartTime) << "s】");
    
    return PackAnswerPackage(lpOutPacker, 0, "同步组合持仓信息_银行间完成", "");
}

int FUNCTION_CALL_MODE F2615193(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker)
{
    LOGSYSTEM("【uft_tfinancedebit_sync】表同步，开始同步融资融券负债表...");
    // 记录功能号开始调用时间
    time_t tStartTime = time(NULL);
    
    CDataSync* pSync = new CFinancedebitRedo(lpContext);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';
    // 开始同步数据
    if (!pSync->doSync(cSyncFlag))
    {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615193()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;
    
    // 记录功能号调用完成时间
    time_t tEndTime = time(NULL);
    LOGSYSTEM("【uft_tfinancedebit_sync】表同步，同步融资融券负债表完成，耗时【" << difftime(tEndTime, tStartTime) << "s】");
    
    return PackAnswerPackage(lpOutPacker, 0, "同步融资融券负债表完成", "");
}

int FUNCTION_CALL_MODE F2615194(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker)
{
    LOGSYSTEM("【hg_tfundasset_sync】表同步，开始同步账户资产...");
    // 记录功能号开始调用时间
    time_t tStartTime = time(NULL);
    
    CDataSync* pSync = new CFundassetRedo(lpContext);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';
    // 开始同步数据
    if (!pSync->doSync(cSyncFlag))
    {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615194()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;
    
    // 记录功能号调用完成时间
    time_t tEndTime = time(NULL);
    LOGSYSTEM("【hg_tfundasset_sync】表同步，同步账户资产完成，耗时【" << difftime(tEndTime, tStartTime) << "s】");
    
    return PackAnswerPackage(lpOutPacker, 0, "同步账户资产完成", "");
}

int FUNCTION_CALL_MODE F2615195(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker)
{
    LOGSYSTEM("【uft_tbankuncomplete】表同步，开始同步银行间成交待交收...");
    // 记录功能号开始调用时间
    time_t tStartTime = time(NULL);
    
    CDataSync* pSync = new CBankUncomplete(lpContext);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';
    // 开始同步数据
    if (!pSync->doSync(cSyncFlag))
    {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615195()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;
    
    // 记录功能号调用完成时间
    time_t tEndTime = time(NULL);
    LOGSYSTEM("【uft_tbankuncomplete】表同步，同步银行间成交待交收完成，耗时【" << difftime(tEndTime, tStartTime) << "s】");
    
    return PackAnswerPackage(lpOutPacker, 0, "同步银行间成交待交收完成", "");
}

int FUNCTION_CALL_MODE F2615196(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker)
{
    LOGSYSTEM("【uft_tsubjectbusiness】表同步，开始同步科目管理类业务流水...");
    // 记录功能号开始调用时间
    time_t tStartTime = time(NULL);
    
    CDataSync* pSync = new CSubjectBusiness(lpContext);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';
    // 开始同步数据
    if (!pSync->doSync(cSyncFlag))
    {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615196()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;
    
    // 记录功能号调用完成时间
    time_t tEndTime = time(NULL);
    LOGSYSTEM("【uft_tsubjectbusiness】表同步，同步科目管理类业务流水完成，耗时【" << difftime(tEndTime, tStartTime) << "s】");
    
    return PackAnswerPackage(lpOutPacker, 0, "同步科目管理类业务流水完成", "");
}

int FUNCTION_CALL_MODE F2615197(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker)
{
    LOGSYSTEM("【uft_tmortgageinfo】表同步，开始同步交易所本方抵押品信息...");
    // 记录功能号开始调用时间
    time_t tStartTime = time(NULL);
    
    CDataSync* pSync = new CMortGageInfo(lpContext);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';
    // 开始同步数据
    if (!pSync->doSync(cSyncFlag))
    {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615197()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;
    
    // 记录功能号调用完成时间
    time_t tEndTime = time(NULL);
    LOGSYSTEM("【uft_tmortgageinfo】表同步，同步交易所本方抵押品信息完成，耗时【" << difftime(tEndTime, tStartTime) << "s】");
    
    return PackAnswerPackage(lpOutPacker, 0, "同步交易所本方抵押品信息完成", "");
}

int FUNCTION_CALL_MODE F2615198(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker)
{
    LOGSYSTEM("【uft_tmortgageinfo_sync】表同步，开始交易所本方抵押品信息_正式清算...");
    // 记录功能号开始调用时间
    time_t tStartTime = time(NULL);
    
    CDataSync* pSync = new CMortGageInfoRedo(lpContext);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';
    // 开始同步数据
    if (!pSync->doSync(cSyncFlag))
    {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615198()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;
    
    // 记录功能号调用完成时间
    time_t tEndTime = time(NULL);
    LOGSYSTEM("【uft_tmortgageinfo_sync】表同步，同步交易所本方抵押品信息_正式清算完成，耗时【" << difftime(tEndTime, tStartTime) << "s】");
    
    return PackAnswerPackage(lpOutPacker, 0, "同步交易所本方抵押品信息_正式清算完成", "");
}

int FUNCTION_CALL_MODE F2615199(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker)
{
    LOGSYSTEM("【uft_tsubjectstock】表同步，开始同步融券负债持仓信息...");
    // 记录功能号开始调用时间
    time_t tStartTime = time(NULL);
    
    CDataSync* pSync = new CSubjectStock(lpContext);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';
    // 开始同步数据
    if (!pSync->doSync(cSyncFlag))
    {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615199()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;
    
    // 记录功能号调用完成时间
    time_t tEndTime = time(NULL);
    LOGSYSTEM("【uft_tsubjectstock】表同步，同步融券负债持仓信息完成，耗时【" << difftime(tEndTime, tStartTime) << "s】");
    
    return PackAnswerPackage(lpOutPacker, 0, "同步融券负债持仓信息完成", "");
}

int FUNCTION_CALL_MODE F2615200(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker)
{
    LOGSYSTEM("【uft_tsubjectstock_sync】表同步，开始同步组合持仓信息_银行间...");
    // 记录功能号开始调用时间
    time_t tStartTime = time(NULL);
    
    CDataSync* pSync = new CSubjectStockRedo(lpContext);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';
    // 开始同步数据
    if (!pSync->doSync(cSyncFlag))
    {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615200()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;
    
    // 记录功能号调用完成时间
    time_t tEndTime = time(NULL);
    LOGSYSTEM("【uft_tsubjectstock_sync】表同步，同步组合持仓信息_银行间完成，耗时【" << difftime(tEndTime, tStartTime) << "s】");
    
    return PackAnswerPackage(lpOutPacker, 0, "同步组合持仓信息_银行间完成", "");
}

int FUNCTION_CALL_MODE F2615201(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker)
{
    LOGSYSTEM("【uft_totcdealsettuncomp】表同步，开始同步场外开基成交待交收...");
    // 记录功能号开始调用时间
    time_t tStartTime = time(NULL);
    
    CDataSync* pSync = new COtcdealsettuncomp(lpContext);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';
    // 开始同步数据
    if (!pSync->doSync(cSyncFlag))
    {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615201()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;
    
    // 记录功能号调用完成时间
    time_t tEndTime = time(NULL);
    LOGSYSTEM("【uft_totcdealsettuncomp】表同步，同步场外开基成交待交收完成，耗时【" << difftime(tEndTime, tStartTime) << "s】");
    
    return PackAnswerPackage(lpOutPacker, 0, "同步场外开基成交待交收完成", "");
}

int FUNCTION_CALL_MODE F2615202(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker)
{
    LOGSYSTEM("【uft_totcdealsettuncomp_sync】表同步，开始同步场外开基成交待交收_正式清算...");
    // 记录功能号开始调用时间
    time_t tStartTime = time(NULL);
    
    CDataSync* pSync = new COtcdealsettuncompRedo(lpContext);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';
    // 开始同步数据
    if (!pSync->doSync(cSyncFlag))
    {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615202()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;
    
    // 记录功能号调用完成时间
    time_t tEndTime = time(NULL);
    LOGSYSTEM("【uft_totcdealsettuncomp_sync】表同步，同步场外开基成交待交收_正式清算完成，耗时【" << difftime(tEndTime, tStartTime) << "s】");
    
    return PackAnswerPackage(lpOutPacker, 0, "同步场外开基成交待交收_正式清算完成", "");
}

int FUNCTION_CALL_MODE F2615203(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker)
{
    LOGSYSTEM("【uft_tinstancestock_yhj】表同步，开始同步实例层持仓信息_银行间...");
    // 记录功能号开始调用时间
    time_t tStartTime = time(NULL);
    
    CDataSync* pSync = new CInstancestockYhj(lpContext);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';
    // 开始同步数据
    if (!pSync->doSync(cSyncFlag))
    {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615203()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;
    
    // 记录功能号调用完成时间
    time_t tEndTime = time(NULL);
    LOGSYSTEM("【uft_tinstancestock_yhj】表同步，同步实例层持仓信息_银行间完成，耗时【" << difftime(tEndTime, tStartTime) << "s】");
    
    return PackAnswerPackage(lpOutPacker, 0, "同步实例层持仓信息_银行间完成", "");
}

int FUNCTION_CALL_MODE F2615204(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker)
{
    LOGSYSTEM("【uft_tinstancestock_xh】表同步，开始同步实例层持仓信息_现货...");
    // 记录功能号开始调用时间
    time_t tStartTime = time(NULL);
    
    CDataSync* pSync = new CInstancestockXh(lpContext);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';
    // 开始同步数据
    if (!pSync->doSync(cSyncFlag))
    {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615204()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;
    
    // 记录功能号调用完成时间
    time_t tEndTime = time(NULL);
    LOGSYSTEM("【uft_tinstancestock_xh】表同步，同步实例层持仓信息_现货完成，耗时【" << difftime(tEndTime, tStartTime) << "s】");
    
    return PackAnswerPackage(lpOutPacker, 0, "同步实例层持仓信息_现货完成", "");
}

int FUNCTION_CALL_MODE F2615205(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker)
{
    LOGSYSTEM("【uft_tinstancestock_qh】表同步，开始同步实例层持仓信息_期货...");
    // 记录功能号开始调用时间
    time_t tStartTime = time(NULL);
    
    CDataSync* pSync = new CInstancestockQh(lpContext);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';
    // 开始同步数据
    if (!pSync->doSync(cSyncFlag))
    {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615205()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;
    
    // 记录功能号调用完成时间
    time_t tEndTime = time(NULL);
    LOGSYSTEM("【uft_tinstancestock_qh】表同步，同步实例层持仓信息_期货完成，耗时【" << difftime(tEndTime, tStartTime) << "s】");
    
    return PackAnswerPackage(lpOutPacker, 0, "同步实例层持仓信息_期货完成", "");
}

int FUNCTION_CALL_MODE F2615206(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker)
{
    LOGSYSTEM("【uft_tinstancestock_xh_sync】表同步，开始同步实例层持仓信息_现货正式清算...");
    // 记录功能号开始调用时间
    time_t tStartTime = time(NULL);
    
    CDataSync* pSync = new CInstancestockXhRedo(lpContext);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';
    // 开始同步数据
    if (!pSync->doSync(cSyncFlag))
    {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615206()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;
    
    // 记录功能号调用完成时间
    time_t tEndTime = time(NULL);
    LOGSYSTEM("【uft_tinstancestock_xh_sync】表同步，同步实例层持仓信息_现货正式清算完成，耗时【" << difftime(tEndTime, tStartTime) << "s】");
    
    return PackAnswerPackage(lpOutPacker, 0, "同步实例层持仓信息_现货正式清算完成", "");
}

int FUNCTION_CALL_MODE F2615207(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker)
{
    LOGSYSTEM("【uft_tinstancestock_qh_redo】表同步，开始同步实例层持仓信息_期货正式清算...");
    // 记录功能号开始调用时间
    time_t tStartTime = time(NULL);
    
    CDataSync* pSync = new CInstancestockQhRedo(lpContext);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';
    // 开始同步数据
    if (!pSync->doSync(cSyncFlag))
    {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615207()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;
    
    // 记录功能号调用完成时间
    time_t tEndTime = time(NULL);
    LOGSYSTEM("【uft_tinstancestock_qh_redo】表同步，同步实例层持仓信息_期货正式清算完成，耗时【" << difftime(tEndTime, tStartTime) << "s】");
    
    return PackAnswerPackage(lpOutPacker, 0, "同步实例层持仓信息_期货正式清算完成", "");
}

int FUNCTION_CALL_MODE F2615208(IAS2Context* lpContext, IF2UnPacker * lpInUnPacker, IF2Packer * lpOutPacker)
{
    LOGSYSTEM("【uft_toption_unitstock_sync】表同步，开始同步UFT期权组合持仓表_正式清算...");
    // 记录功能号开始调用时间
    time_t tStartTime = time(NULL);
    
    CDataSync* pSync = new CInstancestockQhRedo(lpContext);
    char cSyncFlag = lpInUnPacker->GetChar("rjrefresh_flag") == '1' ? '2' : '1';
    // 开始同步数据
    if (!pSync->doSync(cSyncFlag))
    {
        char sErrPathInfo[512] = {0};
        strcpy(sErrPathInfo, conversion((char *) lpInUnPacker->GetStr("error_pathinfo")));
        strcat(sErrPathInfo, "->F2615208()");

        delete pSync;
        return PackAnswerPackage(lpOutPacker, pSync->GetErrorNo(), pSync->GetErrorInfo(), sErrPathInfo);
    }
    delete pSync;
    
    // 记录功能号调用完成时间
    time_t tEndTime = time(NULL);
    LOGSYSTEM("【uft_toption_unitstock_sync】表同步，同步UFT期权组合持仓表_正式清算完成，耗时【" << difftime(tEndTime, tStartTime) << "s】");
    
    return PackAnswerPackage(lpOutPacker, 0, "同步UFT期权组合持仓表_正式清算", "");
}

int  FUNCTION_CALL_MODE GetBizFunctionsInfo(int Index, LPBIZ_FUNC_INFO  ppv )
{
    int iReturnCode = ASFC_EXISTS;
    switch (Index) {
        case 0:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615001;
                ppv->iVersion = 20151216;
                ppv->ReqProc = F2615001;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_账户信息";
            }
            break;
        case 1:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615002;
                ppv->iVersion = 20160329;
                ppv->ReqProc = F2615002;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_资产单元";
            }
            break;
        case 2:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615003;
                ppv->iVersion = 20160329;
                ppv->ReqProc = F2615003;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_组合信息";
            }
            break;
        case 3:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615012;
                ppv->iVersion = 20160329;
                ppv->ReqProc = F2615012;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_账户权限";
            }
            break;
        case 4:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615016;
                ppv->iVersion = 20160329;
                ppv->ReqProc = F2615016;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_证券信息";
            }
            break;
        case 5:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615017;
                ppv->iVersion = 20160329;
                ppv->ReqProc = F2615017;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_债券属性";
            }
            break;
        case 6:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615019;
                ppv->iVersion = 20160329;
                ppv->ReqProc = F2615019;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_期货信息";
            }
            break;
        case 7:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615020;
                ppv->iVersion = 20160329;
                ppv->ReqProc = F2615020;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_期权属性";
            }
            break;
        case 8:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615151;
                ppv->iVersion = 20160329;
                ppv->ReqProc = F2615151;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_证券信息增量";
            }
            break;
        case 9:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615005;
                ppv->iVersion = 20160329;
                ppv->ReqProc = F2615005;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_股东信息";
            }
            break;
        case 10:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615006;
                ppv->iVersion = 20160329;
                ppv->ReqProc = F2615006;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_股东与账户关系";
            }
            break;
        case 11:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615030;
                ppv->iVersion = 20160329;
                ppv->ReqProc = F2615030;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_发行人";
            }
            break;
        case 12:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615032;
                ppv->iVersion = 20160329;
                ppv->ReqProc = F2615032;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_交易对手";
            }
            break;
        case 13:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615051;
                ppv->iVersion = 20160329;
                ppv->ReqProc = F2615051;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_沪深费用";
            }
            break;
        case 14:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615054;
                ppv->iVersion = 20160329;
                ppv->ReqProc = F2615054;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_期货费用";
            }
            break;
        case 15:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615052;
                ppv->iVersion = 20160329;
                ppv->ReqProc = F2615052;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_沪深费用明细";
            }
            break;
        case 16:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615055;
                ppv->iVersion = 20160329;
                ppv->ReqProc = F2615055;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_期货费用明细";
            }
            break;
        case 17:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615004;
                ppv->iVersion = 20160329;
                ppv->ReqProc = F2615004;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_资金账户";
            }
            break;
        case 18:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615063;
                ppv->iVersion = 20160329;
                ppv->ReqProc = F2615063;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_债券利率";
            }
            break;
        case 19:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615089;
                ppv->iVersion = 20160329;
                ppv->ReqProc = F2615089;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_账户分组";
            }
            break;
        case 20:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615088;
                ppv->iVersion = 20160329;
                ppv->ReqProc = F2615088;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_账户分组类型";
            }
            break;
        case 21:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615090;
                ppv->iVersion = 20160329;
                ppv->ReqProc = F2615090;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_账户分组对应基金组合";
            }
            break;
        case 22:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615008;
                ppv->iVersion = 20160329;
                ppv->ReqProc = F2615008;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_交易席位";
            }
            break;
        case 23:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615110;
                ppv->iVersion = 20160329;
                ppv->ReqProc = F2615110;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_现货资产";
            }
            break;
        case 24:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615108;
                ppv->iVersion = 20160329;
                ppv->ReqProc = F2615108;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_组合持仓";
            }
            break;
        case 25:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615126;
                ppv->iVersion = 20160329;
                ppv->ReqProc = F2615126;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_融资融券资产";
            }
            break;
        case 26:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615123;
                ppv->iVersion = 20160329;
                ppv->ReqProc = F2615123;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_持仓可用明细";
            }
            break;
        case 27:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615109;
                ppv->iVersion = 20160329;
                ppv->ReqProc = F2615109;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_持仓明细";
            }
            break;
        case 28:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615010;
                ppv->iVersion = 20160329;
                ppv->ReqProc = F2615010;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_交易日";
            }
            break;
        case 29:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615111;
                ppv->iVersion = 20160329;
                ppv->ReqProc = F2615111;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_期货资产";
            }
            break;
        case 30:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615112;
                ppv->iVersion = 20160329;
                ppv->ReqProc = F2615112;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_期权资产";
            }
            break;
        case 31:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615113;
                ppv->iVersion = 20160329;
                ppv->ReqProc = F2615113;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_实例持仓";
            }
            break;
        case 32:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615158;
                ppv->iVersion = 20160409;
                ppv->ReqProc = F2615158;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_业务处理配置";
            }
            break;
        case 33:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615159;
                ppv->iVersion = 20160409;
                ppv->ReqProc = F2615159;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_银行间场外待交割业务";
            }
            break;
        case 34:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615160;
                ppv->iVersion = 20160409;
                ppv->ReqProc = F2615160;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_银行间在途回购";
            }
            break;
        case 35:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615161;
                ppv->iVersion = 20160409;
                ppv->ReqProc = F2615161;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_银行间在途回购质押券";
            }
            break;
        case 36:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615162;
                ppv->iVersion = 20160409;
                ppv->ReqProc = F2615162;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_场外执行确认";
            }
            break;
        case 37:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615119;
                ppv->iVersion = 20160409;
                ppv->ReqProc = F2615119;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_账户资产";
            }
            break;
        case 38:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615124;
                ppv->iVersion = 20160409;
                ppv->ReqProc = F2615124;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_资产单元资产";
            }
            break;
        case 39:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615163;
                ppv->iVersion = 20160418;
                ppv->ReqProc = F2615163;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_港股通公司行为信息";
            }
            break;
        case 40:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615144;
                ppv->iVersion = 20160426;
                ppv->ReqProc = F2615144;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_在途回购预清算";
            }
            break;
        case 41:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615128;
                ppv->iVersion = 2016426;
                ppv->ReqProc = F2615128;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_资金手工业务流水预清算";
            }
            break;
        case 42:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615129;
                ppv->iVersion = 2016426;
                ppv->ReqProc = F2615129;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_证券手工业务流水预清算";
            }
            break;
        case 43:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615114;
                ppv->iVersion = 2016426;
                ppv->ReqProc = F2615114;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_资金类业务明细预清算";
            }
            break;
        case 44:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615115;
                ppv->iVersion = 2016426;
                ppv->ReqProc = F2615115;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_证券类业务明细预清算";
            }
            break;
        case 45:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615116;
                ppv->iVersion = 2016427;
                ppv->ReqProc = F2615116;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_未完成业务明细预清算";
            }
            break;
        case 46:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615146;
                ppv->iVersion = 2016427;
                ppv->ReqProc = F2615146;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_待交割业务预清算";
            }
            break;
        case 47:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615164;
                ppv->iVersion = 2016428;
                ppv->ReqProc = F2615164;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_期货账户清算状态预清算";
            }
            break;
        case 48:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615131;
                ppv->iVersion = 2016428;
                ppv->ReqProc = F2615131;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_现货资产（正式初始化）";
            }
            break;
        case 49:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615132;
                ppv->iVersion = 20160428;
                ppv->ReqProc = F2615132;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_期货资金（正式初始化）";
            }
            break;
        case 50:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615133;
                ppv->iVersion = 20160428;
                ppv->ReqProc = F2615133;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_期权资金（正式初始化）";
            }
            break;
        case 51:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615134;
                ppv->iVersion = 20160428;
                ppv->ReqProc = F2615134;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_融资融券资金（正式初始化）";
            }
            break;
        case 52:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615135;
                ppv->iVersion = 20160428;
                ppv->ReqProc = F2615135;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_组合持仓（正式初始化）";
            }
            break;
        case 53:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615136;
                ppv->iVersion = 20160428;
                ppv->ReqProc = F2615136;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_实例持仓（正式初始化）";
            }
            break;
        case 54:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615137;
                ppv->iVersion = 20160428;
                ppv->ReqProc = F2615137;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_在途回购业务（正式初始化）";
            }
            break;
        case 55:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615138;
                ppv->iVersion = 20160428;
                ppv->ReqProc = F2615138;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_资金冻结解冻明细（正式初始化）";
            }
            break;
        case 56:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615139;
                ppv->iVersion = 20160428;
                ppv->ReqProc = F2615139;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_证券冻结解冻明细（正式初始化）";
            }
            break;
        case 57:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615140;
                ppv->iVersion = 20160428;
                ppv->ReqProc = F2615140;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_资金类业务明细（正式初始化）";
            }
            break;
        case 58:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615141;
                ppv->iVersion = 20160428;
                ppv->ReqProc = F2615141;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_证券类业务明细（正式初始化）";
            }
            break;
        case 59:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615142;
                ppv->iVersion = 20160428;
                ppv->ReqProc = F2615142;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_未完成业务（正式初始化）";
            }
            break;
        case 60:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615145;
                ppv->iVersion = 20160428;
                ppv->ReqProc = F2615145;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_待交割业务（正式初始化）";
            }
            break;
        case 61:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615153;
                ppv->iVersion = 20160428;
                ppv->ReqProc = F2615153;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_持仓明细（正式初始化）";
            }
            break;
        case 62:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615154;
                ppv->iVersion = 20160428;
                ppv->ReqProc = F2615154;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_持仓可用明细（正式初始化）";
            }
            break;
        case 63:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615157;
                ppv->iVersion = 20160428;
                ppv->ReqProc = F2615157;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_期货账户清算状态（正式初始化）";
            }
            break;
        case 64:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615027;
                ppv->iVersion = 20160428;
                ppv->ReqProc = F2615027;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_期货保证金比例";
            }
            break;
        case 65:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615165;
                ppv->iVersion = 20160524;
                ppv->ReqProc = F2615165;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_期货跨品种套利组合";
            }
            break;
        case 66:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615009;
                ppv->iVersion = 20160516;
                ppv->ReqProc = F2615009;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_系统信息";
            }
            break;
        case 67:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615014;
                ppv->iVersion = 20160516;
                ppv->ReqProc = F2615014;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_营业部";
            }
            break;
        case 68:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615018;
                ppv->iVersion = 20160516;
                ppv->ReqProc = F2615018;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_债券利息税信息";
            }
            break;
        case 69:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615022;
                ppv->iVersion = 20160516;
                ppv->ReqProc = F2615022;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_ETF证券";
            }
            break;
        case 70:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615007;
                ppv->iVersion = 20160517;
                ppv->ReqProc = F2615007;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_席位";
            }
            break;
        case 71:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615023;
                ppv->iVersion = 20160517;
                ppv->ReqProc = F2615023;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_回购参数";
            }
            break;
        case 72:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615013;
                ppv->iVersion = 20160517;
                ppv->ReqProc = F2615013;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_券商信息";
            }
            break;
        case 73:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615021;
                ppv->iVersion = 20160518;
                ppv->ReqProc = F2615021;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_ETF信息";
            }
            break;
        case 74:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615041;
                ppv->iVersion = 20160518;
                ppv->ReqProc = F2615041;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_融资融券标的券";
            }
            break;
        case 75:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615042;
                ppv->iVersion = 20160518;
                ppv->ReqProc = F2615042;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_中登基金行情";
            }
            break;
        case 76:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615053;
                ppv->iVersion = 20160519;
                ppv->ReqProc = F2615053;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_沪深交易费配置";
            }
            break;
        case 77:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615056;
                ppv->iVersion = 20160519;
                ppv->ReqProc = F2615056;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_部门信息";
            }
            break;
        case 78:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615057;
                ppv->iVersion = 20160519;
                ppv->ReqProc = F2615057;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_融资融券证券参数";
            }
            break;
        case 79:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615062;
                ppv->iVersion = 20160519;
                ppv->ReqProc = F2615062;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_营业部扩展属性";
            }
            break;
        case 80:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615068;
                ppv->iVersion = 20160519;
                ppv->ReqProc = F2615068;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_公司行为数据";
            }
            break;
        case 81:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615071;
                ppv->iVersion = 20160520;
                ppv->ReqProc = F2615071;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_融资融券配置";
            }
            break;
        case 82:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615073;
                ppv->iVersion = 20160520;
                ppv->ReqProc = F2615073;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_汇率表";
            }
            break;
        case 83:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615074;
                ppv->iVersion = 20160520;
                ppv->ReqProc = F2615074;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_利率参数";
            }
            break;
        case 84:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615077;
                ppv->iVersion = 20160520;
                ppv->ReqProc = F2615077;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_银行账户信息(本方)";
            }
            break;
        case 85:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615078;
                ppv->iVersion = 20160520;
                ppv->ReqProc = F2615078;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_银行账户信息(对手方)";
            }
            break;
        case 86:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615081;
                ppv->iVersion = 20160520;
                ppv->ReqProc = F2615081;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_上证LOF基金业务参数";
            }
            break;
        case 87:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615082;
                ppv->iVersion = 20160523;
                ppv->ReqProc = F2615082;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_组合策略代码";
            }
            break;
        case 88:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615084;
                ppv->iVersion = 20160523;
                ppv->ReqProc = F2615084;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_银行信息";
            }
            break;
        case 89:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615085;
                ppv->iVersion = 20160523;
                ppv->ReqProc = F2615085;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_期货品种";
            }
            break;
        case 90:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615086;
                ppv->iVersion = 20160523;
                ppv->ReqProc = F2615086;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_最小价差";
            }
            break;
        case 91:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615087;
                ppv->iVersion = 20160523;
                ppv->ReqProc = F2615087;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_营业部资金账号信息";
            }
            break;
        case 92:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615091;
                ppv->iVersion = 20160523;
                ppv->ReqProc = F2615091;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_操作员账户分组类型权限";
            }
            break;
        case 93:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615092;
                ppv->iVersion = 20160523;
                ppv->ReqProc = F2615092;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_期货申报费用设置";
            }
            break;
        case 94:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615094;
                ppv->iVersion = 20160523;
                ppv->ReqProc = F2615094;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_费用套属性";
            }
            break;
        case 95:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615095;
                ppv->iVersion = 20160523;
                ppv->ReqProc = F2615095;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_交易费包含的费用设置费用套表";
            }
            break;
        case 96:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615096;
                ppv->iVersion = 20160524;
                ppv->ReqProc = F2615096;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_现货市场费用套表";
            }
            break;
        case 97:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615097;
                ppv->iVersion = 20160524;
                ppv->ReqProc = F2615097;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_现货市场费用套明细";
            }
            break;
        case 98:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615098;
                ppv->iVersion = 20160524;
                ppv->ReqProc = F2615098;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_委托审批设置";
            }
            break;
        case 99:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615149;
                ppv->iVersion = 20160524;
                ppv->ReqProc = F2615149;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_操作员状态";
            }
            break;
        case 100:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615155;
                ppv->iVersion = 20160524;
                ppv->ReqProc = F2615155;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_TA信息";
            }
            break;
        case 101:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615156;
                ppv->iVersion = 20160524;
                ppv->ReqProc = F2615156;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_TA接口处理模板";
            }
            break;
        case 102:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615028;
                ppv->iVersion = 20160525;
                ppv->ReqProc = F2615028;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_期权保证金信息";
            }
            break;
        case 103:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615034;
                ppv->iVersion = 20160525;
                ppv->ReqProc = F2615034;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_公司信息";
            }
            break;
        case 104:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615166;
                ppv->iVersion = 20160602;
                ppv->ReqProc = F2615166;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_证券自定义分类";
            }
            break;
        case 105:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615167;
                ppv->iVersion = 20160602;
                ppv->ReqProc = F2615167;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_自定义分类";
            }
            break;
        case 106:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615117;
                ppv->iVersion = 20160527;
                ppv->ReqProc = F2615117;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_UFT沪深申报序列";
            }
            break;
        case 107:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615011;
                ppv->iVersion = 20160527;
                ppv->ReqProc = F2615011;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_操作员";
            }
            break;
        case 108:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615066;
                ppv->iVersion = 20160527;
                ppv->ReqProc = F2615066;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_系统参数值";
            }
            break;
        case 109:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615015;
                ppv->iVersion = 20160530;
                ppv->ReqProc = F2615015;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_市场信息";
            }
            break;
        case 110:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615065;
                ppv->iVersion = 20160531;
                ppv->ReqProc = F2615065;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_期货套利代码";
            }
            break;
        case 111:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615093;
                ppv->iVersion = 20160531;
                ppv->ReqProc = F2615093;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_深圳分级基金盲拆盲合";
            }
            break;
        case 112:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615125;
                ppv->iVersion = 20160607;
                ppv->ReqProc = F2615125;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_融资融券负债信息";
            }
            break;
        case 113:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615083;
                ppv->iVersion = 20160607;
                ppv->ReqProc = F2615083;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_期权组合持仓";
            }
            break;
        case 114:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615168;
                ppv->iVersion = 20160623;
                ppv->ReqProc = F2615168;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_科目余额";
            }
            break;
        case 115:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615169;
                ppv->iVersion = 20160623;
                ppv->ReqProc = F2615169;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_科目余额（正式初始化）";
            }
            break;
        case 116:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615172;
                ppv->iVersion = 20160708;
                ppv->ReqProc = F2615172;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_投资基金信息";
            }
            break;
        case 117:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615170;
                ppv->iVersion = 20160629;
                ppv->ReqProc = F2615170;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_期货保证券在途信息";
            }
            break;
        case 118:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615171;
                ppv->iVersion = 20160709;
                ppv->ReqProc = F2615171;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_特殊业务属性";
            }
            break;
        case 119:
            if (ppv != NULL)
            {
                ppv->dwFunctionNo = 2615173;
                ppv->iVersion = 20160729;
                ppv->ReqProc = F2615173;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_场外执行确认（正式初始化）";
            }
            break;     
		 case 120://added by wangzh19004
            if (NULL != ppv) {
                ppv->dwFunctionNo = 2615174;
                ppv->iVersion = 20160709;
                ppv->ReqProc = F2615174;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_券商高利率";
            }
            break;
        case 121:
            if (ppv != NULL)
            {
                ppv->dwFunctionNo = 2615175;
                ppv->iVersion = 20160808;
                ppv->ReqProc = F2615175;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_证券发行信息表";
            }
            break;
        case 122:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615176;
                ppv->iVersion = 20161031;
                ppv->ReqProc = F2615176;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_外部评级机构信息";
            }
            break;
        case 123:
            if (ppv != NULL) {
                ppv->dwFunctionNo = 2615177;
                ppv->iVersion = 20161103;
                ppv->ReqProc = F2615177;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_历史成交流水";
            }
            break;               
        case 124:
            if (ppv != NULL)
            {
                ppv->dwFunctionNo = 2615178;
                ppv->iVersion = 20161102;
                ppv->ReqProc = F2615178;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_证券调整业务流水_现货交易所";
            }
            break;
        case 125:
            if (ppv != NULL)
            {
                ppv->dwFunctionNo = 2615179;
                ppv->iVersion = 20161103;
                ppv->ReqProc = F2615179;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_证券调整业务流水_期货";
            }
            break;
        case 126:
            if (ppv != NULL)
            {
                ppv->dwFunctionNo = 2615180;
                ppv->iVersion = 20161103;
                ppv->ReqProc = F2615180;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_证券调整业务流水_场外";
            }
            break;
        case 127:
            if (ppv != NULL)
            {
                ppv->dwFunctionNo = 2615181;
                ppv->iVersion = 20161103;
                ppv->ReqProc = F2615181;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_证券调整业务流水_银行间";
            }
            break;
        case 128:
            if (ppv != NULL)
            {
                ppv->dwFunctionNo = 2615182;
                ppv->iVersion = 20161103;
                ppv->ReqProc = F2615182;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_证券冻结解冻明细流水_现货交易所";
            }
            break;
        case 129:
            if (ppv != NULL)
            {
                ppv->dwFunctionNo = 2615183;
                ppv->iVersion = 20161103;
                ppv->ReqProc = F2615183;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_证券冻结解冻明细流水_期货";
            }
            break;
        case 130:
            if (ppv != NULL)
            {
                ppv->dwFunctionNo = 2615184;
                ppv->iVersion = 20161103;
                ppv->ReqProc = F2615184;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_证券冻结解冻明细流水_场外";
            }
            break;
        case 131:
            if (ppv != NULL)
            {
                ppv->dwFunctionNo = 2615185;
                ppv->iVersion = 20161107;
                ppv->ReqProc = F2615185;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_证券冻结解冻明细流水_银行间";
            }
            break;
        case 132:
            if (ppv != NULL)
            {
                ppv->dwFunctionNo = 2615186;
                ppv->iVersion = 20161107;
                ppv->ReqProc = F2615186;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_组合持仓信息_现货交易所";
            }
            break;
        case 133:
            if (ppv != NULL)
            {
                ppv->dwFunctionNo = 2615187;
                ppv->iVersion = 20161107;
                ppv->ReqProc = F2615187;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_组合持仓信息_现货交易所_正式清算";
            }
            break;
        case 134:
            if (ppv != NULL)
            {
                ppv->dwFunctionNo = 2615188;
                ppv->iVersion = 20161107;
                ppv->ReqProc = F2615188;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_组合持仓信息_期货";
            }
            break;
        case 135:
            if (ppv != NULL)
            {
                ppv->dwFunctionNo = 2615189;
                ppv->iVersion = 20161107;
                ppv->ReqProc = F2615189;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_组合持仓信息_期货_正式清算";
            }
            break;
        case 136:
            if (ppv != NULL)
            {
                ppv->dwFunctionNo = 2615190;
                ppv->iVersion = 20161107;
                ppv->ReqProc = F2615190;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_组合持仓信息_场外";
            }
            break;
        case 137:
            if (ppv != NULL)
            {
                ppv->dwFunctionNo = 2615191;
                ppv->iVersion = 20161107;
                ppv->ReqProc = F2615191;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_组合持仓信息_场外_正式清算";
            }
            break;
        case 138:
            if (ppv != NULL)
            {
                ppv->dwFunctionNo = 2615192;
                ppv->iVersion = 20161107;
                ppv->ReqProc = F2615192;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_组合持仓信息_银行间";
            }
            break;
        case 139:
            if (ppv != NULL)
            {
                ppv->dwFunctionNo = 2615193;
                ppv->iVersion = 20161111;
                ppv->ReqProc = F2615193;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_融资融券负债表_正式清算";
            }
            break;
        case 140:
            if (ppv != NULL)
            {
                ppv->dwFunctionNo = 2615194;
                ppv->iVersion = 20161111;
                ppv->ReqProc = F2615194;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_账户资产_正式清算";
            }
            break;
        case 141:
            if (ppv != NULL)
            {
                ppv->dwFunctionNo = 2615195;
                ppv->iVersion = 20161111;
                ppv->ReqProc = F2615195;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_银行间成交待交收";
            }
            break;
        case 142:
            if (ppv != NULL)
            {
                ppv->dwFunctionNo = 2615196;
                ppv->iVersion = 20161111;
                ppv->ReqProc = F2615196;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_科目管理类业务流水";
            }
            break;
        case 143:
            if (ppv != NULL)
            {
                ppv->dwFunctionNo = 2615197;
                ppv->iVersion = 20161111;
                ppv->ReqProc = F2615197;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_交易所本方抵押品信息";
            }
            break;
        case 144:
            if (ppv != NULL)
            {
                ppv->dwFunctionNo = 2615198;
                ppv->iVersion = 20161111;
                ppv->ReqProc = F2615198;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_交易所本方抵押品信息_正式清算";
            }
            break;
        case 145:
            if (ppv != NULL)
            {
                ppv->dwFunctionNo = 2615199;
                ppv->iVersion = 20161111;
                ppv->ReqProc = F2615199;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_融券负债持仓信息";
            }
            break;
        case 146:
            if (ppv != NULL)
            {
                ppv->dwFunctionNo = 2615200;
                ppv->iVersion = 20161111;
                ppv->ReqProc = F2615200;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_融券负债持仓信息_正式清算";
            }
            break;
        case 147:
            if (ppv != NULL)
            {
                ppv->dwFunctionNo = 2615201;
                ppv->iVersion = 20161111;
                ppv->ReqProc = F2615201;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_场外开基成交待交收";
            }
            break;
        case 148:
            if (ppv != NULL)
            {
                ppv->dwFunctionNo = 2615202;
                ppv->iVersion = 20161111;
                ppv->ReqProc = F2615202;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_场外开基成交待交收_正式清算";
            }
            break;
        case 149:
            if (ppv != NULL)
            {
                ppv->dwFunctionNo = 2615203;
                ppv->iVersion = 20161111;
                ppv->ReqProc = F2615203;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_实例层持仓信息_银行间";
            }
            break;
        case 150:
            if (ppv != NULL)
            {
                ppv->dwFunctionNo = 2615204;
                ppv->iVersion = 20161212;
                ppv->ReqProc = F2615204;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_实例层持仓信息_现货";
            }
            break;
        case 151:
            if (ppv != NULL)
            {
                ppv->dwFunctionNo = 2615205;
                ppv->iVersion = 20161212;
                ppv->ReqProc = F2615205;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_实例层持仓信息_期货";
            }
            break;
        case 152:
            if (ppv != NULL)
            {
                ppv->dwFunctionNo = 2615206;
                ppv->iVersion = 20161212;
                ppv->ReqProc = F2615206;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_实例层持仓信息_现货_正式清算";
            }
            break;
        case 153:
            if (ppv != NULL)
            {
                ppv->dwFunctionNo = 2615207;
                ppv->iVersion = 20161212;
                ppv->ReqProc = F2615207;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_实例层持仓信息_期货_正式清算";
            }
            break;
        case 154:
            if (ppv != NULL)
            {
                ppv->dwFunctionNo = 2615208;
                ppv->iVersion = 20170117;
                ppv->ReqProc = F2615208;
                ppv->AnsProc = NULL;
                ppv->Caption = "AS_数据同步_UFT期权组合持仓表_正式清算";
            }
        break;
        default:
            iReturnCode = ASFC_NONE;
    }
    return iReturnCode;
}

char * ASFC_CALL_MODE GetLibVersion() {
    return "2.0.1.1";
}

void FUNCTION_CALL_MODE OnLoad(char * arg) {
}

void FUNCTION_CALL_MODE OnUnload() {
}

void FUNCTION_CALL_MODE OnStart() {

}

void FUNCTION_CALL_MODE OnStop() {
}