#include "InvestfundinfoSync.h"
#define SQLCA_STORAGE_CLASS extern
#include <sqlca.h>

CInvestfundinfoSync::CInvestfundinfoSync(IAS2Context * lpContext) : CDataSync(lpContext)
{
    strcpy(m_sSrcTable, "tinvestfundinfo");
    strcpy(m_sSrcView, "VO4JC_INVESTFUNDINFO");
    strcpy(m_sTmpTable, "sync_investfundinfo");
    strcpy(m_sDstTable, "jc_tinvestfundinfo");
    m_nBatchRows = BATCH_ROWS;
    EXEC SQL WHENEVER SQLERROR DO SqlErrorAction();
}

CInvestfundinfoSync::~CInvestfundinfoSync()
{
}

bool CInvestfundinfoSync::ExpO3View2Temp()
{
    LOGDETAIL("【" << m_sDstTable << "】表同步，导入数据到中间转换表【" << m_sTmpTable << "】开始");

    // 准备RPOC执行上下文
    struct sqlca sqlca;
    EXEC SQL ENABLE THREADS;
    sql_context o3Ctx = m_lpO3Conn->getSQLContext();
    sql_context o4Ctx = m_lpO4Conn->getSQLContext();

    EXEC SQL BEGIN DECLARE SECTION;
    int nFetchRows;
    //声明结构体变量

    typedef struct InvestfundinfoRecord
    {
        int  sys_date[BATCH_ROWS];
        char market_no[BATCH_ROWS][2];
        char report_code[BATCH_ROWS][33];
        char fund_invest_type[BATCH_ROWS][2];
        char fund_issue_type[BATCH_ROWS][2];
        char fund_fee_type[BATCH_ROWS][2];
        int  redeem_back_days[BATCH_ROWS];
        char  remark[BATCH_ROWS][1025];
        char ta_type[BATCH_ROWS][2];
        char vc_suspend_status[BATCH_ROWS][129];
        double purchase_limit[BATCH_ROWS];
        double classify_money[BATCH_ROWS];
        int inter_fund_id[BATCH_ROWS];
    } InvestfundinfoRecord;
    InvestfundinfoRecord *lpInvestfundinfoRecord = NULL;
    EXEC SQL END DECLARE SECTION;
    

    // 申请内存空间
    lpInvestfundinfoRecord = new InvestfundinfoRecord();
    if (NULL == lpInvestfundinfoRecord)
    {
        SetErrorInfo(SYNC_ERR_MALLOC_MEMORY, "【%s】表同步，申请结构体内存【InvestfundinfoRecord】失败", m_sDstTable);
        return false;
    }
    memset(lpInvestfundinfoRecord, 0, sizeof (InvestfundinfoRecord));

    //-------------------------------------------------------------------------
    // 从O32读取数据放入到结构体
    LOGDETAIL("【" << m_sDstTable << "】表同步，查询O3View【" << m_sSrcView << "】数据开始");
    EXEC SQL CONTEXT USE :o3Ctx;
    EXEC SQL DECLARE CUR_READDATA CURSOR FOR 
                    select sys_date, market_no,report_code,fund_invest_type, fund_issue_type,fund_fee_type,redeem_back_days,remark,ta_type,vc_suspend_status,purchase_limit,classify_money, inter_fund_id
                    from VO4JC_INVESTFUNDINFO;
    EXEC SQL OPEN CUR_READDATA;
    if (sqlca.sqlcode < 0)
    {
        SetErrorInfo(SYNC_ERR_QUERY_SRC_TABLE, "【%s】表同步，查询O3View【%s】数据失败【%s】", m_sDstTable, m_sSrcView, sqlca.sqlerrm.sqlerrmc);
        delete lpInvestfundinfoRecord;
        return false;
    }
    LOGDETAIL("【" << m_sDstTable << "】表同步，查询O3View【" << m_sSrcView << "】完成，总行数【" << m_nTotalRows << "】条");

    // 从游标批量导入到O4临时表
    for (int i = 0; i < m_nLoopTimes; ++i)
    {
        // 从游标导入内存
        EXEC SQL CONTEXT USE :o3Ctx;
        EXEC SQL FETCH CUR_READDATA into :lpInvestfundinfoRecord;
        if (sqlca.sqlcode < 0)
        {
            SetErrorInfo(SYNC_ERR_EXPORT_DATA_TEMP, "【%s】表同步，导入数据到中间转换表【%s】时FETCH数据失败【%s】", m_sDstTable, m_sTmpTable, sqlca.sqlerrm.sqlerrmc);
            delete lpInvestfundinfoRecord;
            return false;
        }

        // 从内存导入临时表
        nFetchRows = (i == (m_nLoopTimes - 1)) ? m_nRemainRows : m_nBatchRows;

        EXEC SQL CONTEXT USE :o4Ctx;
        EXEC SQL for :nFetchRows
             insert into sync_investfundinfo(sys_date, market_no,report_code,fund_invest_type, fund_issue_type,fund_fee_type,redeem_back_days,remark,ta_type,vc_suspend_status,purchase_limit,classify_money, inter_fund_id)
             values(:lpInvestfundinfoRecord->sys_date,
										rtrim(:lpInvestfundinfoRecord->market_no),
										rtrim(:lpInvestfundinfoRecord->report_code),
										rtrim(:lpInvestfundinfoRecord->fund_invest_type),
										rtrim(:lpInvestfundinfoRecord->fund_issue_type),
                                        rtrim(:lpInvestfundinfoRecord->fund_fee_type),
										:lpInvestfundinfoRecord->redeem_back_days,
										rtrim(:lpInvestfundinfoRecord->remark),
                                        rtrim(:lpInvestfundinfoRecord->ta_type),
                                        rtrim(:lpInvestfundinfoRecord->vc_suspend_status),
										:lpInvestfundinfoRecord->purchase_limit,
										:lpInvestfundinfoRecord->classify_money, 
                                        :lpInvestfundinfoRecord->inter_fund_id);
        if (sqlca.sqlcode < 0)
        {
            SetErrorInfo(DB_ERR_INSERT, "【%s】表同步，导入数据到中间转换表【%s】失败【%s】", m_sDstTable, m_sTmpTable, sqlca.sqlerrm.sqlerrmc);
            delete lpInvestfundinfoRecord;
            return false;
        }
        EXEC SQL COMMIT;
    }

    EXEC SQL CONTEXT USE :o3Ctx;
    EXEC SQL CLOSE CUR_READDATA;
    LOGDETAIL("【" << m_sDstTable << "】表同步，导入数据到中间转换表【" << m_sTmpTable << "】完成");
    delete lpInvestfundinfoRecord;
    return true;
}

bool CInvestfundinfoSync::ExpTemp2Dst()
{
    LOGDETAIL("【" << m_sDstTable << "】表同步，导入数据到O4表【" << m_sDstTable << "】开始");
    sql_context o4Ctx = m_lpO4Conn->getSQLContext();
    struct sqlca sqlca;
    EXEC SQL ENABLE THREADS;
    EXEC SQL BEGIN DECLARE SECTION;
    char sExecSql[10240] = {0};
    EXEC SQL END DECLARE SECTION;
    if (!DropTableIndex())
        return false;
    EXEC SQL CONTEXT USE :o4Ctx;
    sprintf(sExecSql, "DECLARE"
            "  V_TABLE_NAME_O4   VARCHAR2(64);"
            "BEGIN"
            "  V_TABLE_NAME_O4  := '%s';"
            "  EXECUTE IMMEDIATE 'truncate table ' || V_TABLE_NAME_O4;"
            "  EXECUTE IMMEDIATE 'INSERT INTO '|| V_TABLE_NAME_O4 || '(' || "
            "       '   SYS_DATE, INTER_CODE,FUND_INVEST_TYPE, FUND_ISSUE_TYPE,FUND_FEE_TYPE,'   ||"
            "       '   REDEEM_BACK_DAYS,REMARK,TA_TYPE,VC_SUSPEND_STATUS,PURCHASE_LIMIT,CLASSIFY_MONEY, INTER_FUND_ID)'   ||"
            "       '   SELECT T1.SYS_DATE,T3.INTER_CODE,NVL(T1.FUND_INVEST_TYPE,'' ''),NVL(T1.FUND_ISSUE_TYPE,'' ''), '   ||"
            "       '   NVL(T1.FUND_FEE_TYPE,'' ''),T1.REDEEM_BACK_DAYS,NVL(T1.REMARK,'' ''),NVL(T1.TA_TYPE,'' ''),NVL(T1.VC_SUSPEND_STATUS,'' ''),T1.PURCHASE_LIMIT,T1.CLASSIFY_MONEY, T1.INTER_FUND_ID '   ||"
            "       '   FROM SYNC_INVESTFUNDINFO T1,JC_TCONVERTMARKETNO T2,JC_TCONVERTINTERCODE T3 '   ||"
            "       '   WHERE T1.MARKET_NO = T2.MARKET_NO_SRC	'   ||"
            "       '   AND T2.MARKET_NO = T3.MARKET_NO     '   ||"
            "       '   AND T1.REPORT_CODE = T3.REPORT_CODE   ';   "
            "  COMMIT;"
            "END;", m_sDstTable);

    EXEC SQL EXECUTE IMMEDIATE :sExecSql;
    if (sqlca.sqlcode < 0)
    {
        RecoverTableIndex();
        SetErrorInfo(SYNC_ERR_IMPORT_DATA_DST, "【%s】表同步，导入数据到O4表【%s】失败【%s】", m_sDstTable, m_sDstTable, sqlca.sqlerrm.sqlerrmc);
        return false;
    }

    if (!RecoverTableIndex())
        return false;
    LOGDETAIL("【" << m_sDstTable << "】表同步，导入数据到O4表【" << m_sDstTable << "】完成");
    return true;
}



