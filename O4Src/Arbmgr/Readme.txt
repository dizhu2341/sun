#######################################################################

=======================================================================
                  fbase2.0普通插件模块 fsc_arbmgr
=======================================================================

作    者: 公司研发中心 chengjin
创建时间: 2016-07-29

-----------------------------------------------------------------------

插件类型: 可管理可反转普通插件

-----------------------------------------------------------------------
框架清单: 文件夹--Include,Class,os,Lib/vc,Lib/linux.i386,plugins/Arbmgr
          文  件--arbmgr_interface.h, fsc_arbmgr_impl.h, fsc_arbmgr_impl.cpp
                --arbmgr.def,makefile.mvc,makefile.gcc,makefile.inc,Readme.txt

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
说    明: 1.框架根据是否可管理、可反转做了相应代码的处理, 获得框架代码以后，
            只需根据需要并按照开发规范在todo 部分增改代码即可。
 
          1-1.可管理：为插件提供IManager接口的实现, 以支持插件在线管理
            插件开发者需要按照管理接口原型自行设计该插件支持的管理功能，
            以便通过管理功能在运行时获得插件的内部状态或控制插件的某些行为;
            另外, 对于那些具有内部处理线程的插件, 这些线程一般需要在整个
            系统初始化完成之后开始运行, 则插件需要响应IManager接口中的
            ProcSysEvent()方法, 以便在收到系统启动、停止等事件时作出相应的
            处理。
            
          1-2.可反转：为插件提供IIoC接口的实现, 以支持插件的可配置
            若插件的实现需要有配置项, 则可以在OnInit函数中通过框架提供的
            m_lpConfig配置对象读取插件所需的配置信息
            注意：
                 对于可反转插件，框架已在OnInit函数中给出了插件配置信息的
            读取示例
            
            若插件需要用到其他插件, 则需要在插件的GetArbmgrDependSvr()
            引出函数中声明需要依赖的其他插件的SID, 以表明当前插件会依赖哪些
            插件, 插件容器会根据该声明, 在插件初始化前通过IIoC接口为插件设置
            相应的依赖插件。
            注意：
                 依赖的插件需要在IIoC类提供的SetDependService接口中保存所
            依赖的插件接口

          2.生成的插件代码支持GCC和MVC编译器，可直接切换到代码目录并使用
            makefile进行编译.
            编译命令:
            Windows
                nmake -f makefile.mvc
            Linux
                make -f makefile.gcc
         
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  
备    注: 1.请将plugin_interface.h, config_interface.h, pack_interface.h, 
            tag_def.h等fbase2.0基础头文件拷贝到Include下...
            
#######################################################################
